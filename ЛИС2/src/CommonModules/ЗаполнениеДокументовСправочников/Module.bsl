#Область ПрограммныйИнтерфейс 

// Процедура заполняет общие реквизиты документа,
// вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях документа.
//
// Параметры:
// ДокументОбъект - <ДокументОбъект> - документ, реквизиты которого необходимо заполнить.
Процедура ЗаполнитьДокумент(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт 
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеДокумента) Тогда 
		ДокументОбъект.Организация = ОрганизацииСлужебный.ОрганизацияПоУмолчанию();	
	КонецЕсли;	
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", МетаданныеДокумента) 
	ИЛИ Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(ДокументОбъект.Метаданные().Имя).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда 
		ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();	
	КонецЕсли;	
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		ЗаполнитьПоСтруктуре(ДокументОбъект, ДанныеЗаполнения, МетаданныеДокумента);
	КонецЕсли;
	
КонецПроцедуры	

// Процедура заполняет общие реквизиты справочника,
// вызывается в обработчиках событий "ОбработкаЗаполнения" в модулях справочника.
//
// Параметры:
// СправочникОбъект - <СправочникОбъект> - справочник, реквизиты которого необходимо заполнить.
Процедура ЗаполнитьСправочник(СправочникОбъект, ДанныеЗаполнения = Неопределено) Экспорт 
	
	МетаданныеСправочника = СправочникОбъект.Метаданные();
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", МетаданныеСправочника) Тогда 
		СправочникОбъект.Организация = ОрганизацииСлужебный.ОрганизацияПоУмолчанию();	
	КонецЕсли;	
	
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("Ответственный", МетаданныеСправочника) 
	ИЛИ Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(СправочникОбъект.Метаданные().Имя).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать Тогда 
		СправочникОбъект.Ответственный = Пользователи.ТекущийПользователь();	
	КонецЕсли;	
		
КонецПроцедуры

// Заполняет реквизиты объекта значениями, полученными в структуре ДанныхЗаполнения.
//	Заполнение возможно только в случае, когда в качестве ДанныхЗаполнения получена структура.
//	Заполнены будут только те реквизиты, для которых в метаданных установлен флаг "ЗаполнятьИзДанныхЗаполнения".
//
//
// Параметры
//  <Объект>  - <СправочникОбъект>, <ДокументОбъект> и т.д. - Заполняемый объект,
//  <ДанныеЗаполнения>  - <произвольный тип> - параметр, полученный в ОбработкеЗаполнения объекта,
//  <МетаданныеОбъекта>  - <Метаданные> - метаданные.
//
//
Процедура ЗаполнитьПоСтруктуре(Объект, ДанныеЗаполнения, МетаданныеОбъекта = Неопределено)	Экспорт

	Если Объект = Неопределено
		ИЛИ ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")
		ИЛИ ДанныеЗаполнения.Количество() = 0 Тогда

		Возврат;

	КонецЕсли;

	Если МетаданныеОбъекта = Неопределено Тогда
		МетаданныеОбъекта = Объект.Метаданные();
	КонецЕсли;
	Если  Метаданные.Справочники.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеОбъекта) Тогда
		РазличатьГруппыИЭлементы = МетаданныеОбъекта.Иерархический;
	Иначе
		РазличатьГруппыИЭлементы = Ложь;
	КонецЕсли;

	СтруктураЗаполнения = Новый Структура;
	Для Каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			СтруктураЗаполнения.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Если Реквизит.ЗаполнятьИзДанныхЗаполнения
			И ДанныеЗаполнения.Свойство(Реквизит.Имя) Тогда
			Если РазличатьГруппыИЭлементы Тогда
				Если (Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента)
					ИЛИ
					(НЕ Объект.ЭтоГруппа И Реквизит.Использование <> Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы)
					Тогда
					СтруктураЗаполнения.Вставить(Реквизит.Имя);
				КонецЕсли;
			Иначе
				СтруктураЗаполнения.Вставить(Реквизит.Имя);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ЗаполняемыйЭлемент Из СтруктураЗаполнения Цикл
		ЗначениеЗаполнения = ДанныеЗаполнения[ЗаполняемыйЭлемент.Ключ];
		Если ТипЗнч(ЗначениеЗаполнения) = Тип("Массив")
			ИЛИ ТипЗнч(ЗначениеЗаполнения) = Тип("ФиксированныйМассив") Тогда
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения[0];
		Иначе
			СтруктураЗаполнения[ЗаполняемыйЭлемент.Ключ] = ЗначениеЗаполнения;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Объект, СтруктураЗаполнения);

КонецПроцедуры

#КонецОбласти
