#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	ПериодичностьПоквартально = Перечисления.ПериодичностьРазрешительнойДокументации.Поквартально;
	
	Если Не ЗначениеЗаполнено(Объект.КоличествоЗнаковПослеЗапятойДляПросмотра) Тогда
		Объект.КоличествоЗнаковПослеЗапятойДляПросмотра = 14;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
	
	ИзменениеОтображенияЗнаковПослеЗапятой();
	
	ЗаполнениеАдресаПлощадки();
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
		ЭтотОбъект.ТолькоПросмотр = Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Объект.Ссылка );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере( Отказ, ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Документ проводится автоматически при утверждении", , , , Отказ );
			Возврат;
		КонецЕсли;
		
		Обработки.СозданиеНСИ.ПроверитьЗаполнениеРеквизитов( ЭтотОбъект, Отказ );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере( ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	ПослеЗаписиОбъектаБизнесПроцессаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием( Отказ, СтандартнаяОбработка )
	
	// Работа с бизнес-процессами
	Если Не ЗакрыватьБезусловно И ЗадачаИсполнителяНеЗавершенаНаСервере() Тогда 
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗакрытиеФормы", ЭтотОбъект );	
		ПоказатьВопрос( текОповещение, "Отправить на согласование документ '" + Объект.Ссылка + "'?", РежимДиалогаВопрос.ДаНет );

		Отказ				= Истина;
		ЗакрыватьБезусловно = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачалоДействияРазрешенияПриИзменении(Элемент)
	
	Если Объект.НачалоДействияРазрешения <> '00010101' И Объект.КонецДействияРазрешения = '00010101' Тогда
		Объект.КонецДействияРазрешения = ДобавитьМесяц(Объект.НачалоДействияРазрешения, 84);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаВыдачи) Тогда
		Объект.ДатаВыдачи = Объект.НачалоДействияРазрешения;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры	

&НаКлиенте
Процедура КонецДействияРазрешенияПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если Объект.НачалоДействияРазрешения = '00010101' Тогда
	    Объект.НачалоДействияРазрешения = Объект.Дата;
		Если Объект.КонецДействияРазрешения = '00010101' Тогда
			Объект.КонецДействияРазрешения = ДобавитьМесяц(Объект.НачалоДействияРазрешения, 84);
		КонецЕсли;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура НачалоДействияРазрешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.КонецДействияРазрешения) И Объект.КонецДействияРазрешения > ДобавитьМесяц(ВыбранноеЗначение,84) Тогда 
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Разрешение не может быть выдано на период больше семи лет. Выберите другое значение даты.",, "Объект.НачалоДействияРазрешения");
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонецДействияРазрешения) И Объект.КонецДействияРазрешения < ВыбранноеЗначение Тогда 
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата начала не может быть больше даты окончания. Выберите другое значение даты.",, "Объект.НачалоДействияРазрешения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонецДействияРазрешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.НачалоДействияРазрешения) И ВыбранноеЗначение > ДобавитьМесяц(Объект.НачалоДействияРазрешения,84) Тогда 
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Разрешение не может быть выдано на период больше семи лет. Выберите другое значение даты.",, "Объект.КонецДействияРазрешения");
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачалоДействияРазрешения) И ВыбранноеЗначение < Объект.НачалоДействияРазрешения Тогда 
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата окончания не может быть меньше даты начала. Выберите другое значение даты.",, "Объект.КонецДействияРазрешения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьРазрешенияПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьВСВПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Организация"" не заполнено", , "Объект.Организация", ,);
		
	КонецЕсли;

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблиц

&НаКлиенте
Процедура ТаблицаЗВРазрешенныйВыбросГод2ПриИзменении(Элемент)
		                                   
	ТекущаяСтрока = Элементы.ТаблицаЗВ.ДанныеСтроки(Элементы.ТаблицаЗВ.ТекущаяСтрока);
	ТекущееЗначение = ТекущаяСтрока.РазрешенныйВыбросГод2;
	
	КоличествоЛет = Год(Объект.КонецДействияРазрешения)-Год(Объект.НачалоДействияРазрешения);
	
	Для Счетчик = 3 По КоличествоЛет Цикл		
		Если Элементы["ТаблицаЗВГруппаГод" + Строка(Счетчик)].Видимость = 1 
		И	ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = 0 Тогда 		
			Если Элементы["ТаблицаЗВГруппаГод" + Строка(Счетчик+1)].Видимость = 1 Тогда
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = ТекущееЗначение;
			Иначе
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;
	
	Если Элементы["ТаблицаЗВГруппаГод" + Строка(КоличествоЛет+1)].Видимость = 1 Тогда
		ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(КоличествоЛет+1)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВВСВГод2ПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ТаблицаЗВ.ДанныеСтроки(Элементы.ТаблицаЗВ.ТекущаяСтрока);
	ТекущееЗначение = ТекущаяСтрока.ВСВГод2;
	
	КоличествоЛет = Год(Объект.КонецДействияРазрешения)-Год(Объект.НачалоДействияРазрешения);
	
	Для Счетчик = 3 По КоличествоЛет Цикл		
		Если Элементы["ТаблицаЗВГруппаВСВГод" + Строка(Счетчик)].Видимость = 1 
		И	ТекущаяСтрока["ВСВГод" + Строка(Счетчик)] = 0 Тогда 		
			Если Элементы["ТаблицаЗВГруппаВСВГод" + Строка(Счетчик+1)].Видимость = 1 Тогда
				ТекущаяСтрока["ВСВГод" + Строка(Счетчик)] = ТекущееЗначение;
			Иначе
				ТекущаяСтрока["ВСВГод" + Строка(Счетчик)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;
	
	Если Элементы["ТаблицаЗВГруппаВСВГод" + Строка(КоличествоЛет+1)].Видимость = 1 Тогда
		ТекущаяСтрока["ВСВГод" + Строка(КоличествоЛет+1)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод2ПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.ДанныеСтроки(Элементы.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.ТекущаяСтрока);
	ТекущееЗначение = ТекущаяСтрока.РазрешенныйВыбросГод2;
	
	КоличествоЛет = Год(Объект.КонецДействияРазрешения)-Год(Объект.НачалоДействияРазрешения);
	
	Для Счетчик = 3 По КоличествоЛет Цикл		
		Если Элементы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Счетчик)].Видимость = 1 
		И	ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = 0 Тогда 		
			Если Элементы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Счетчик+1)].Видимость = 1 Тогда
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = ТекущееЗначение;
			Иначе
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Счетчик)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
			КонецЕсли;			
		КонецЕсли;		
	КонецЦикла;
	
	Если Элементы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(КоличествоЛет+1)].Видимость = 1 Тогда
		ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(КоличествоЛет+1)] = ТекущееЗначение/ДеньГода(КонецГода(Объект.КонецДействияРазрешения))*ДеньГода(Объект.КонецДействияРазрешения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПередУдалением(Элемент, Отказ)
		
	Отказ = Истина;
		
	Оповещение = Новый ОписаниеОповещения("ТаблицаЗВПередУдалениемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Вы точно хотите удалить выделенные строки?", РежимДиалогаВопрос.ДаНет);
		
	Возврат;		
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиЗагрязненияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Данные = Элементы.ИсточникиЗагрязнения.ДанныеСтроки(Элементы.ИсточникиЗагрязнения.ТекущаяСтрока);
	Если НоваяСтрока ИЛИ НЕ ЗначениеЗаполнено(Данные.ИдентификаторСтроки) Тогда 
		Данные.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		УправлениеВидимостью(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.ДанныеСтроки(Элементы.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.ТекущаяСтрока);
	Если НоваяСтрока Тогда
		ТекущиеДанные.ИдентификаторИЗА = Элементы.ИсточникиЗагрязнения.ТекущиеДанные.ИдентификаторСтроки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиЗагрязненияПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ИсточникиЗагрязнения.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Элементы.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторИЗА", ТекущиеДанные.ИдентификаторСтроки);
		ПересчетИтоговТаблицыЗВ();
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиЗагрязненияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ИсточникиЗагрязненияПередУдалениемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Вы точно хотите удалить выделенные строки?", РежимДиалогаВопрос.ДаНет);
		
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАПриИзменении(Элемент)
	
	Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
		ПересчетГодаТаблицыЗВ(Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА);
	КонецЕсли;
	
	ПересчетИтоговТаблицыЗВ();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПриИзменении(Элемент)
	
	Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
		ПересчетГодаТаблицыЗВ(Объект.ТаблицаЗВ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Объект.ИсточникиЗагрязнения.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для внесения загрязняющих веществ необходимо заполнить таблицу источников загрязнения.",, "Объект.ИсточникиЗагрязнения");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиЗагрязненияИсточникЗагрязненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.ПроизводственнаяПлощадка) Тогда	
		
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Производственная площадка"" не заполнено", , "Объект.Организация", ,);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьНормативыПоДаннымВкладок(Команда)
	
	Если НЕ Объект.ТаблицаЗВ.Количество() = 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьНормативыПоДаннымВкладокЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение,"Данное действие приведет к потере заполненных в таблице данных. Продолжить?", РежимДиалогаВопрос.ДаНет,0, КодВозвратаДиалога.Нет, "Предупреждение");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНормативыПоДаннымВкладокНаСервере();
	
	Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
		ПересчетГодаТаблицыЗВ(Объект.ТаблицаЗВ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНормативыПоДаннымВкладокНаСервере()
	
	Объект.ТаблицаЗВ.Очистить();
	
	ИсходнаяТаблица = Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.Выгрузить();
	СтрокаСуммирования = "";
	
	КоличествоЛет = Год(Объект.КонецДействияРазрешения)-Год(Объект.НачалоДействияРазрешения)+1;
	
	Для НумГод = 1 По КоличествоЛет Цикл
		
		ТекущийГод = Строка(НумГод);
		СтрокаСуммирования = СтрокаСуммирования + ", РазрешенныйВыбросГод" + ТекущийГод + ", ВСВГод" + ТекущийГод + ", МощностьВыбросаГод" + ТекущийГод + ", МощностьВыбросаВСВГод" + ТекущийГод;
		
		Если Объект.ПериодичностьРазрешения = Перечисления.ПериодичностьРазрешительнойДокументации.Поквартально Тогда
		
			Для НумКвартал = 1 По 4 Цикл
				
				ТекущийКвартал = Строка(НумКвартал);
				СтрокаСуммирования = СтрокаСуммирования + ", РазрешенныйВыбросГод" + ТекущийГод + "Квартал" + ТекущийКвартал + ", ВСВГод" + ТекущийГод + "Квартал" + ТекущийКвартал;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаСуммирования = Прав(СтрокаСуммирования,СтрДлина(СтрокаСуммирования)-2);
	
	ИсходнаяТаблица.Свернуть("ЗагрязняющееВещество", СтрокаСуммирования);
			
	Объект.ТаблицаЗВ.Загрузить(ИсходнаяТаблица);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзДанныхИнвентаризации(Команда)
	
	Если ЗначениеЗаполнено(Объект.ПроизводственнаяПлощадка) Тогда
		
		Если НЕ Объект.ИсточникиЗагрязнения.Количество() = 0 Тогда
			Оповещение = Новый ОписаниеОповещения("ЗаполнитьИзДанныхИнвентаризацииЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Оповещение,"Данное действие приведет к потере заполненных данных в таблицах. Продолжить?", РежимДиалогаВопрос.ДаНет,0, КодВозвратаДиалога.Нет, "Предупреждение");
			Возврат;
		КонецЕсли;
		
		ЗаполнитьИзДанныхИнвентаризацииНаСервере();

		Если НЕ Объект.ИсточникиЗагрязнения.Количество() = 0 Тогда
			
			Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
				ПересчетГодаТаблицыЗВ(Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА);
			КонецЕсли;
		
			Элементы.ИсточникиЗагрязнения.ТекущаяСтрока = 0;
						
		КонецЕсли;

	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Производственная площадка"" не заполнено", , "Объект.ПроизводственнаяПлощадка", ,);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзДанныхИнвентаризацииНаСервере()
	
	Объект.ИсточникиЗагрязнения.Очистить();
	Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.Очистить();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ИсточникВыделения.Родитель КАК ИсточникЗагрязнения,
		|	ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ЗагрязняющееВещество КАК ЗагрязняющееВещество,
		|	СУММА(ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ВыбросГС) КАК ВыбросГС,
		|	СУММА(ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ВыбросТГ) КАК ВыбросТГ
		|ИЗ
		|	РегистрСведений.ИнвентаризацияВыбросовПоИсточникамВыделения.СрезПоследних(
		|			&Дата,
		|			Организация = &Организация
		|				И ПроизводственнаяПлощадка = &ПроизводственнаяПлощадка) КАК ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ИсточникВыделения.Родитель,
		|	ИнвентаризацияВыбросовПоИсточникамВыделенияСрезПоследних.ЗагрязняющееВещество
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИсточникЗагрязнения
		|ИТОГИ ПО
		|	ИсточникЗагрязнения");
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПроизводственнаяПлощадка", Объект.ПроизводственнаяПлощадка);
	Запрос.УстановитьПараметр("Дата", Объект.НачалоДействияРазрешения);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Поквартально = ?(Объект.ПериодичностьРазрешения = Перечисления.ПериодичностьРазрешительнойДокументации.Поквартально, Истина, Ложь);
	КоличествоЛет = Год(Объект.КонецДействияРазрешения)-Год(Объект.НачалоДействияРазрешения)+1;
	Пока Выборка.Следующий() Цикл   
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			НоваяСтрокаИЗА = Объект.ИсточникиЗагрязнения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаИЗА, Выборка);
			НоваяСтрокаИЗА.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		Иначе
			
			НоваяСтрокаЗВ = Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаЗВ, Выборка);
			
			Для Нум = 1 По КоличествоЛет Цикл
				СтрокаНум = Строка(Нум);
				
				Если НЕ Поквартально Тогда
				
					Если Нум = 1 Тогда
						ДнейВГоду = ДеньГода(КонецГода(Объект.НачалоДействияРазрешения));
						//+++Фугаева 11.10.2017 Исправлено:  для разрешений, дата начала и окончания которых лежат в одном году,
						//									 выброс должен также браться пропорционально, а не за весь год
						// Было: НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум] = Выборка.ВыбросТГ*(ДнейВГоду-ДеньГода(Объект.НачалоДействияРазрешения)+1)/ДнейВГоду;
						Если Год(Объект.НачалоДействияРазрешения) = Год(Объект.КонецДействияРазрешения) Тогда
							КоличествоДнейДействияРазрешения = ДеньГода(Объект.КонецДействияРазрешения) - ДеньГода(Объект.НачалоДействияРазрешения) + 1;
						Иначе
							КоличествоДнейДействияРазрешения = ДнейВГоду-ДеньГода(Объект.НачалоДействияРазрешения)+1
						КонецЕсли;
						НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум] = Выборка.ВыбросТГ*КоличествоДнейДействияРазрешения/ДнейВГоду;
					ИначеЕсли Нум = КоличествоЛет Тогда
						ДнейВГоду = ДеньГода(КонецГода(Объект.КонецДействияРазрешения));
						НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум] = Выборка.ВыбросТГ*ДеньГода(Объект.КонецДействияРазрешения)/ДнейВГоду;
					Иначе
						НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум] = Выборка.ВыбросТГ;
					КонецЕсли; 
					
					НоваяСтрокаЗВ["МощностьВыбросаГод" + СтрокаНум] = Выборка.ВыбросГС;
					
				Иначе
				
					НоваяСтрокаЗВ["МощностьВыбросаГод" + СтрокаНум] = Выборка.ВыбросГС;
					
					Для НумКвартал = 1 По 4 Цикл
						
						СтрокаНумКвартал = Строка(НумКвартал);
						
						Если НЕ Элементы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + СтрокаНум + "Квартал" + СтрокаНумКвартал].Видимость Тогда
							Продолжить;
						КонецЕсли;
							
						Если Нум = 1 И НумКвартал = 1 Тогда
							ДнейВКвартале = ДеньГода(КонецКвартала(Объект.НачалоДействияРазрешения)) - ДеньГода(НачалоКвартала(Объект.НачалоДействияРазрешения))+1;
							НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум + "Квартал" + СтрокаНумКвартал] = Выборка.ВыбросТГ/4*(ДеньГода(КонецКвартала(Объект.НачалоДействияРазрешения))- ДеньГода(Объект.НачалоДействияРазрешения)+1)/ДнейВКвартале;
						ИначеЕсли Нум = КоличествоЛет И НумКвартал = 4 Тогда
							ДнейВКвартале = ДеньГода(КонецКвартала(Объект.КонецДействияРазрешения)) - ДеньГода(НачалоКвартала(Объект.КонецДействияРазрешения))+1;
							НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум + "Квартал" + СтрокаНумКвартал] = Выборка.ВыбросТГ/4*(ДеньГода(Объект.КонецДействияРазрешения)- ДеньГода(НачалоКвартала(Объект.КонецДействияРазрешения))+1)/ДнейВКвартале;
						Иначе
							НоваяСтрокаЗВ["РазрешенныйВыбросГод" + СтрокаНум + "Квартал" + СтрокаНумКвартал] = Выборка.ВыбросТГ/4;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
	
			НоваяСтрокаЗВ.ИдентификаторИЗА = НоваяСтрокаИЗА.ИдентификаторСтроки; 
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	ЭлементыФормы = Форма.Элементы;
	
	ДатаНачала = Форма.Объект.НачалоДействияРазрешения;
	ДатаОкончания = Форма.Объект.КонецДействияРазрешения;
	
	Если ДатаНачала <> '00010101' И ДатаОкончания <> '00010101' Тогда
		
		КоличествоЛет = Год(ДатаОкончания)-Год(ДатаНачала);
		
		Для Индекс = 0 По 7 Цикл
			ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость = (КоличествоЛет > Индекс - 1);
			ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1)].Заголовок = "ПДВ " + Формат(Год(ДатаНачала) + Индекс,"ЧГ=;") + ", т/год";
			ЭлементыФормы["ТаблицаЗВМощностьВыбросаГод" + Строка(Индекс + 1)].Заголовок = "ПДВ " + Формат(Год(ДатаНачала) + Индекс,"ЧГ=;") + ", г/с";
			ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1)].Доступность = НЕ (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			ЭлементыФормы["ТаблицаЗВВСВГод" + Строка(Индекс + 1)].Доступность = НЕ (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Индекс + 1)].Видимость = (КоличествоЛет > Индекс - 1);
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + Строка(Индекс + 1)].Заголовок = "ПДВ " + Формат(Год(ДатаНачала) + Индекс,"ЧГ=;") + ", т/год";
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАМощностьВыбросаГод" + Строка(Индекс + 1)].Заголовок = "ПДВ " + Формат(Год(ДатаНачала) + Индекс,"ЧГ=;") + ", г/с";
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + Строка(Индекс + 1)].Доступность =  НЕ (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + Строка(Индекс + 1)].Доступность =  НЕ (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			
			Если ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость И Индекс = 0 Тогда
				Кварт = 1;
				Пока НЕ Кварт = Число(Формат(ДатаНачала, "ДФ=к")) Цикл
					ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = 0;
					ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = 0;
					Если Форма.Объект.ОтображатьВСВ Тогда
						ЭлементыФормы["ТаблицаЗВВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
						ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
					КонецЕсли;
					Кварт = Кварт + 1;
				КонецЦикла;
			ИначеЕсли ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость И Индекс = КоличествоЛет Тогда	
				Кварт = 4;
				Пока НЕ Кварт = Число(Формат(ДатаОкончания, "ДФ=к")) Цикл
					ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = 0;
					ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = 0;
					Если Форма.Объект.ОтображатьВСВ Тогда
						ЭлементыФормы["ТаблицаЗВВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
						ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
					КонецЕсли;
					Кварт = Кварт - 1;
				КонецЦикла;	                                                                                                                                                     
			КонецЕсли;
			
			Если Форма.Объект.ОтображатьВСВ Тогда 
				ЭлементыФормы["ТаблицаЗВГруппаВСВГод" + Строка(Индекс + 1)].Видимость = ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость;
				ЭлементыФормы["ТаблицаЗВВСВГод" + Строка(Индекс + 1)].Заголовок = СтрЗаменить(ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1)].Заголовок, "ПДВ", "ВСВ");
				ЭлементыФормы["ТаблицаЗВМощностьВыбросаВСВГод" + Строка(Индекс + 1)].Заголовок = СтрЗаменить(ЭлементыФормы["ТаблицаЗВМощностьВыбросаГод" + Строка(Индекс + 1)].Заголовок, "ПДВ", "ВСВ");
				ЭлементыФормы["ТаблицаЗВГруппаВСВГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость;				
				
				ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаВСВГод" + Строка(Индекс + 1)].Видимость = ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость;
				ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + Строка(Индекс + 1)].Заголовок = СтрЗаменить(ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1)].Заголовок, "ПДВ", "ВСВ");
				ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАМощностьВыбросаВСВГод" + Строка(Индекс + 1)].Заголовок = СтрЗаменить(ЭлементыФормы["ТаблицаЗВМощностьВыбросаГод" + Строка(Индекс + 1)].Заголовок, "ПДВ", "ВСВ");
				ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаВСВГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость;	
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Для Индекс = 0 По 7 Цикл
			ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость = 0;
			ЭлементыФормы["ТаблицаЗВГруппаВСВГод" + Строка(Индекс + 1)].Видимость = 0;
			
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Индекс + 1)].Видимость = 0;
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаВСВГод" + Строка(Индекс + 1)].Видимость = 0;
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ Форма.Объект.ОтображатьВСВ Тогда 
		Для Индекс = 0 По 7 Цикл
			ЭлементыФормы["ТаблицаЗВГруппаВСВГод" + Строка(Индекс + 1)].Видимость = 0;
			ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаВСВГод" + Строка(Индекс + 1)].Видимость = 0;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ТекущаяСтрока Из Форма.Объект.ТаблицаЗВ Цикл
		Для Индекс = 0 По 7 Цикл
			Если НЕ ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость Тогда
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1)] = 0;
				ТекущаяСтрока["МощностьВыбросаГод" + Строка(Индекс + 1)] = 0;
				ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1)] = 0;
				ТекущаяСтрока["МощностьВыбросаВСВГод" + Строка(Индекс + 1)] = 0;
				Для Кварт = 1 По 4 Цикл
					ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
					ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
				КонецЦикла;
			ИначеЕсли ЭлементыФормы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость Тогда
				Для Кварт = 1 По 4 Цикл
					Если НЕ ЭлементыФормы["ТаблицаЗВРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость Тогда
						ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
						ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из Форма.Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА Цикл
		Для Индекс = 0 По 7 Цикл
			Если НЕ ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Индекс + 1)].Видимость Тогда
				ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1)] = 0;
				ТекущаяСтрока["МощностьВыбросаГод" + Строка(Индекс + 1)] = 0;
				ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1)] = 0;
				Для Кварт = 1 По 4 Цикл
					ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
					ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
				КонецЦикла;
			ИначеЕсли ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость Тогда
				Для Кварт = 1 По 4 Цикл
					Если НЕ ЭлементыФормы["ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость Тогда
						ТекущаяСтрока["РазрешенныйВыбросГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
						ТекущаяСтрока["ВСВГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПередУдалениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда	
		
		ВыделенныеСтроки = Элементы.ТаблицаЗВ.ВыделенныеСтроки;
		УдаляемыеСтроки = Новый Массив;
		
		Для Каждого УИНСтроки Из ВыделенныеСтроки Цикл
			НомерСтроки = Объект.ТаблицаЗВ.Индекс(Объект.ТаблицаЗВ.НайтиПоИдентификатору(УИНСтроки));
			УдаляемыеСтроки.Добавить(Объект.ТаблицаЗВ.Получить(НомерСтроки));
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Объект.ТаблицаЗВ.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникиЗагрязненияПередУдалениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда	
		
		ВыделенныеСтроки = Элементы.ИсточникиЗагрязнения.ВыделенныеСтроки;
		УдаляемыеСтроки = Новый Массив;
				
		Для Каждого УИНСтроки Из ВыделенныеСтроки Цикл
			НомерСтроки = Объект.ИсточникиЗагрязнения.Индекс(Объект.ИсточникиЗагрязнения.НайтиПоИдентификатору(УИНСтроки));
			УдаляемыеСтроки.Добавить(Объект.ИсточникиЗагрязнения.Получить(НомерСтроки));
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл			
			
			УдаляемыеСтрокиЗВ = Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.НайтиСтроки(Новый Структура("ИдентификаторИЗА",УдаляемаяСтрока.ИдентификаторСтроки));
			Для Каждого УдаляемаяСтрокаЗВ Из УдаляемыеСтрокиЗВ Цикл
				Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.Удалить(УдаляемаяСтрокаЗВ);
			КонецЦикла;
			
			Объект.ИсточникиЗагрязнения.Удалить(УдаляемаяСтрока);
			
		КонецЦикла;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетИтоговТаблицыЗВ()
	
	Для НомерГода = 1 По 8 Цикл
		ЭтаФорма["ПДВИтогГод" + НомерГода] = 0; 
		ЭтаФорма["ВСВИтогГод" + НомерГода] = 0;
		Для НомерКвартала = 1 По 4 Цикл
			ЭтаФорма["ПДВИтогГод" + НомерГода + "Кв" + НомерКвартала] = 0; 
			ЭтаФорма["ВСВИтогГод" + НомерГода + "Кв" + НомерКвартала] = 0; 
		КонецЦикла;
	КонецЦикла;

	ВыбранныеСтроки = Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА.НайтиСтроки(Новый Структура("ИдентификаторИЗА",Элементы.ИсточникиЗагрязнения.ТекущиеДанные.ИдентификаторСтроки));
	Для Каждого ТекСтрока Из ВыбранныеСтроки Цикл
		Для НомерГода = 1 По 8 Цикл			
			Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
				ТекСтрока["РазрешенныйВыбросГод" + НомерГода] = 0;
				ТекСтрока["ВСВГод" + НомерГода] = 0;
			КонецЕсли;
			Для НомерКвартала = 1 По 4 Цикл
				ЭтаФорма["ПДВИтогГод" + НомерГода + "Кв" + НомерКвартала] = ЭтаФорма["ПДВИтогГод" + НомерГода + "Кв" + НомерКвартала] + ТекСтрока["РазрешенныйВыбросГод" + НомерГода + "Квартал" + НомерКвартала]; 
				ЭтаФорма["ВСВИтогГод" + НомерГода + "Кв" + НомерКвартала] = ЭтаФорма["ВСВИтогГод" + НомерГода + "Кв" + НомерКвартала] + ТекСтрока["ВСВГод" + НомерГода + "Квартал" + НомерКвартала]; 
				Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
					ТекСтрока["РазрешенныйВыбросГод" + НомерГода] = ТекСтрока["РазрешенныйВыбросГод" + НомерГода] + ТекСтрока["РазрешенныйВыбросГод" + НомерГода + "Квартал" + НомерКвартала];
					ТекСтрока["ВСВГод" + НомерГода] = ТекСтрока["ВСВГод" + НомерГода] + ТекСтрока["ВСВГод" + НомерГода + "Квартал" + НомерКвартала];
				КонецЕсли;
			КонецЦикла;
			ЭтаФорма["ПДВИтогГод" + НомерГода] = ЭтаФорма["ПДВИтогГод" + НомерГода] + ТекСтрока["РазрешенныйВыбросГод" + НомерГода]; 
			ЭтаФорма["ВСВИтогГод" + НомерГода] = ЭтаФорма["ВСВИтогГод" + НомерГода] + ТекСтрока["ВСВГод" + НомерГода]; 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетГодаТаблицыЗВ(ТаблицаЗВ)
	
	Для Каждого ТекСтрока Из ТаблицаЗВ Цикл
		Для НомерГода = 1 По 8 Цикл			
			ТекСтрока["РазрешенныйВыбросГод" + НомерГода] = 0;
			ТекСтрока["ВСВГод" + НомерГода] = 0;
			Для НомерКвартала = 1 По 4 Цикл
				ТекСтрока["РазрешенныйВыбросГод" + НомерГода] = ТекСтрока["РазрешенныйВыбросГод" + НомерГода] + ТекСтрока["РазрешенныйВыбросГод" + НомерГода + "Квартал" + НомерКвартала];
				ТекСтрока["ВСВГод" + НомерГода] = ТекСтрока["ВСВГод" + НомерГода] + ТекСтрока["ВСВГод" + НомерГода + "Квартал" + НомерКвартала];
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНормативыПоДаннымВкладокЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;		
	КонецЕсли;
	
	ЗаполнитьНормативыПоДаннымВкладокНаСервере();
	
	Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
		ПересчетГодаТаблицыЗВ(Объект.ТаблицаЗВ);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзДанныхИнвентаризацииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьИзДанныхИнвентаризацииНаСервере();
	
	Если НЕ Объект.ИсточникиЗагрязнения.Количество() = 0 Тогда
		
		Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
			ПересчетГодаТаблицыЗВ(Объект.ПереченьКоличествоЗВРазрешенныхКВыбросуИЗА);
		КонецЕсли;
		
		Элементы.ИсточникиЗагрязнения.ТекущаяСтрока = 0;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ИзменениеОтображенияЗнаковПослеЗапятой()
	
	Для Нум = 1 По 14 Цикл
		
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		
		Для НумГода = 1 По 8 Цикл
			
			СтрокаНумГода = Строка(НумГода);
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗВРазрешенныйВыбросГод" + СтрокаНумГода);
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗВВСВГод" + СтрокаНумГода);
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗВМощностьВыбросаГод" + СтрокаНумГода);
			
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + СтрокаНумГода);
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + СтрокаНумГода);
			ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАМощностьВыбросаГод" + СтрокаНумГода);
			
			Для НумКвартала = 1 По 4 Цикл
				
				СтрокаНумКвартала = Строка(НумКвартала);
				ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗВРазрешенныйВыбросГод" + СтрокаНумГода + "Квартал" + СтрокаНумКвартала);
				ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаЗВВСВГод" + СтрокаНумГода + "Квартал" + СтрокаНумКвартала);
				ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАРазрешенныйВыбросГод" + СтрокаНумГода + "Квартал" + СтрокаНумКвартала);
				ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ПереченьКоличествоЗВРазрешенныхКВыбросуИЗАВСВГод" + СтрокаНумГода + "Квартал" + СтрокаНумКвартала);
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КоличествоЗнаковПослеЗапятойДляПросмотра");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Число(Нум);
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Формат", "ЧДЦ=" + Строка(Нум));	
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаПриИзменении(Элемент)
	
	ЗаполнениеАдресаПлощадки();
 
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеАдресаПлощадки()

	ИмяПредопределенного = Справочники.ВидыКонтактнойИнформации.ФактАдресПроизводственныеПлощадки;
	Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ИмяПредопределенного);
	
	Результат = Объект.ПроизводственнаяПлощадка.КонтактнаяИнформация.НайтиСтроки(Данные);
	
	Если Результат.Количество() > 0 Тогда
		Адрес = Результат[0].Представление;
	Иначе
		Адрес = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Работа с бизнес-процессами
#Область ФункцииБизнесПроцессов

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытиеФормы( Результат, ДополнительныеПараметры ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		текКомандаВыполнения = ПолучитьКомандуВыполнения();
		Если текКомандаВыполнения <> Неопределено Тогда 
			ВыполнитьЗадачу( текКомандаВыполнения );
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗадачу( Команда ) Экспорт
	
	Если ПроверитьЗаполнениеДанныхНаСервере() Тогда 
		стрКомментарий = "";
		
		текОповещение  = Новый ОписаниеОповещения( "ПослеВводаКомментария", ЭтотОбъект );	
		
		ПоказатьВводСтроки( текОповещение, стрКомментарий, "Введите комментарий выполненой задачи" );
		
		ЗавершитьЗадачуНаСервере( Команда.Имя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКомментария( фпКомментарий, фпПараметры ) Экспорт
	
	Если Не ПустаяСтрока( фпКомментарий ) Тогда
		УстановитьКомментарийЗадачиНаСервере( ЭтотОбъект.БП_ВыполняемаяЗадача, фпКомментарий );	
	КонецЕсли;
	
	Если Открыта() Тогда 
		Закрыть();
	КонецЕсли;
	
	Оповестить( "БП_ВыполнениеЗадачи", Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура БП_ВыполнитьЗадачу( Команда )
	
	БП_ПоддержкаБизнесПроцессовКлиент.ВыполнитьЗадачу( ЭтотОбъект, Команда );
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомандуВыполнения()
	
	Для Каждого текКоманда Из Команды Цикл 	
		Если текКоманда.Действие = "БП_ВыполнитьЗадачу" Тогда 
			Возврат текКоманда;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗадачаИсполнителяНеЗавершенаНаСервере()
	
	Возврат ( Элементы.Найти( "БП_ВыполняемаяЗадача" ) <> Неопределено И
		 	  Не ЭтотОбъект.БП_ВыполняемаяЗадача.Выполнена И
		 	  ЭтотОбъект.БП_ВыполняемаяЗадача.ТочкаМаршрута.Порядок = 1 );
	
КонецФункции

&НаСервере
Функция ПроверитьЗаполнениеДанныхНаСервере()

	Возврат ИСТИНА; //РеквизитФормыВЗначение( "Объект" ).ПроверитьЗаполнениеДанных();

КонецФункции

&НаСервере
Процедура УстановитьРеквизитыПоБизнесПроцессуНаСервере()

	Обработки.СозданиеНСИ.УстановитьРеквизитОрганизация( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, Объект.Организация );
	
	Обработки.СозданиеНСИ.УстановитьСрокВыполненияПоследнейЗадачиБизнесПроцесса( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс );
								
	Обработки.СозданиеНСИ.УстановитьРеквизитПользователь( ЭтотОбъект.БП_ВыполняемаяЗадача, ПараметрыСеанса.ТекущийПользователь );
	
	Обработки.СозданиеНСИ.УстановитьРеквизитПредставлениеОбъекта( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, Объект );
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьБизнесПроцессСогласованияНаСервере()
	
	Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Объект.Ссылка );
	
	БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиОбъектаБизнесПроцессаНаСервере()
	
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		ЗапуститьБизнесПроцессСогласованияНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьЗадачуНаСервере( фпИмяКоманды )

	текНомер  = Сред( фпИмяКоманды, 12 );
	текСтатус = ЭтаФорма["БП_Статус" + текНомер];
	
	НачатьТранзакцию();
	
	БП_ПоддержкаБизнесПроцессовСервер.ЗавершитьЗадачу( ЭтотОбъект.БП_ВыполняемаяЗадача, ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, текСтатус );

	Если ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс.Завершен Тогда 
		Попытка
			РеквизитФормыВЗначение( "Объект" ).Записать( РежимЗаписиДокумента.Проведение );
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( ОписаниеОшибки() );
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Обработки.СозданиеНСИ.УстановитьРеквизитыПоБизнесПроцессу( ЭтотОбъект.БП_ВыполняемаяЗадача, Объект.Ссылка );
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьКомментарийЗадачиНаСервере( фпЗадача, фпКомментарий )
	
	Обработки.СозданиеНСИ.УстановитьРеквизитКомментарий( фпЗадача, фпКомментарий );
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ЭтаФорма.ВладелецФормы <> Неопределено И ЭтаФорма.Модифицированность Тогда 
		ОбновлятьВладельца = Истина;
	КонецЕсли; 	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	Если ОбновлятьВладельца и (НЕ Объект.ДокументОснование.Пустая()) Тогда 
		Оповестить("ОбновитьСписокРазрешений", Объект.Ссылка);
	КонецЕсли;
КонецПроцедуры


#КонецОбласти
