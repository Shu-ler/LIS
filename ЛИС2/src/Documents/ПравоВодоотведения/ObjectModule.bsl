#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.НормативныеОбъемыСбросовВВодныеОбъекты.Записывать = Истина;
	
	Для Каждого ТекСтрока Из Выпуски Цикл
		
		КоличествоЛет	 = Год(ЭтотОбъект.ДатаОкончания) - Год(ЭтотОбъект.ДатаНачала) + 1;
		ЧислоМесяцев	 = 0;
		
		Если ЭтотОбъект.Поквартально Тогда
			
			Пока КоличествоЛет > 0 Цикл
				
				НомерКвартала = ?(ЧислоМесяцев <> 0, 1, ?(Цел(Месяц(ДатаНачала) / 3) = Месяц(ДатаНачала) / 3, Месяц(ДатаНачала) / 3, Цел(Месяц(ДатаНачала) / 3) + 1));
				
				Пока НомерКвартала < 5 Цикл 
					
					Если ТекСтрока["ОбъемДопустимогоСброса" + НомерКвартала + "Квартал"] > 0 Тогда
						
						Если НачалоКвартала(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, ЧислоМесяцев)) > ЭтотОбъект.ДатаОкончания Тогда
							
							Прервать;
							
						КонецЕсли;
						
						ДвижениеРегистраОбъемов = Движения.НормативныеОбъемыСбросовВВодныеОбъекты.Добавить();
						
						ЗаполнитьЗначенияСвойств(ДвижениеРегистраОбъемов, ЭтотОбъект);
						ЗаполнитьЗначенияСвойств(ДвижениеРегистраОбъемов, ТекСтрока);
						
						ДвижениеРегистраОбъемов.ВодныйОбъект = ВодныйОбъект;
						ДвижениеРегистраОбъемов.ВыпускВВоду	 = ТекСтрока.Выпуск;
						
						Период								 = НачалоКвартала(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, ЧислоМесяцев));
						
						ДвижениеРегистраОбъемов.Период		 = ?(Период < ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаНачала, Период);
						
						Если ПолучитьФункциональнуюОпцию("ВестиКонтрольПосуточногоЗабораВоды")
							И ЭтотОбъект.Посуточно
							И ДеньГода(КонецГода(ДвижениеРегистраОбъемов.Период)) = 366
							И НомерКвартала = 1 Тогда
							
							ДвижениеРегистраОбъемов.Объем = ТекСтрока["ОбъемДопустимогоСброса1КварталВисокосныйГод"];
							
						Иначе
							
							ДвижениеРегистраОбъемов.Объем = ТекСтрока["ОбъемДопустимогоСброса" + НомерКвартала + "Квартал"];
							
						КонецЕсли;
						
						ДатаОкончанияДействияНорматива							 = КонецКвартала(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, ЧислоМесяцев));
						
						ДвижениеРегистраОбъемов.ДатаОкончанияДействияНорматива	 = ?(ДатаОкончанияДействияНорматива > ЭтотОбъект.ДатаОкончания, КонецДня(ЭтотОбъект.ДатаОкончания), ДатаОкончанияДействияНорматива);
						ДвижениеРегистраОбъемов.КатегорияКачестваВоды			 = ТекСтрока.КатегорияКачества;
						
					КонецЕсли;
					
					НомерКвартала	 = НомерКвартала + 1;
					ЧислоМесяцев	 = ЧислоМесяцев + 3;
					
				КонецЦикла;
				
				КоличествоЛет = КоличествоЛет - 1;
				
			КонецЦикла;
			
		Иначе
			
			Пока КоличествоЛет > 0 Цикл
				
				ДвижениеРегистраОбъемов = Движения.НормативныеОбъемыСбросовВВодныеОбъекты.Добавить();
				
				ЗаполнитьЗначенияСвойств(ДвижениеРегистраОбъемов, ЭтотОбъект);
				ЗаполнитьЗначенияСвойств(ДвижениеРегистраОбъемов, ТекСтрока);
				
				ДвижениеРегистраОбъемов.ВыпускВВоду  = ТекСтрока.Выпуск;
				ДвижениеРегистраОбъемов.ВодныйОбъект = ВодныйОбъект;
				
				Период								 = НачалоГода(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, ЧислоМесяцев));
				
				ДвижениеРегистраОбъемов.Период		 = ?(Период < ЭтотОбъект.ДатаНачала, ЭтотОбъект.ДатаНачала, Период);;
				
				Если ПолучитьФункциональнуюОпцию("ВестиКонтрольПосуточногоЗабораВоды")
					И ЭтотОбъект.Посуточно
					И ДеньГода(КонецГода(ДвижениеРегистраОбъемов.Период)) = 366 Тогда
					
					ДвижениеРегистраОбъемов.Объем = ТекСтрока.ОбъемДопустимогоСбросаВисокосныйГод;
					
				Иначе
					
					ДвижениеРегистраОбъемов.Объем = ТекСтрока.ОбъемДопустимогоСброса;
					
				КонецЕсли;
				
				ДатаОкончанияДействияНорматива							 = КонецГода(ДобавитьМесяц(ЭтотОбъект.ДатаНачала, ЧислоМесяцев));
				
				ДвижениеРегистраОбъемов.ДатаОкончанияДействияНорматива	 = ?(ДатаОкончанияДействияНорматива > ЭтотОбъект.ДатаОкончания, КонецДня(ЭтотОбъект.ДатаОкончания), ДатаОкончанияДействияНорматива);
				ДвижениеРегистраОбъемов.КатегорияКачестваВоды			 = ТекСтрока.КатегорияКачества;
				
				ЧислоМесяцев	 = ЧислоМесяцев + 12;
				КоличествоЛет	 = КоличествоЛет - 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.НормативнаяКонцентрацияЗагрязняющихВеществПоВыпускамВВоду.Записывать = Истина;
	
	Для Каждого ТекущаяСтрока Из ТаблицаЗагрязняющихВеществ Цикл
		
		ДвижениеРегистраКонцентраций	 = Движения.НормативнаяКонцентрацияЗагрязняющихВеществПоВыпускамВВоду.Добавить();
		СтруктураЗаполненияКонцентраций	 = Новый Структура("Период, ВодныйОбъект, КонцентрацияНорматив, КонцентрацияЛимит, ДатаОкончанияДействияНорматива", 
			ДатаНачала, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрока.ВыпускВВоду, "ВодныйОбъект"), ТекущаяСтрока.НормативноДопустимыйСброс, ТекущаяСтрока.УстановленныйЛимитНаСброс, ДатаОкончания);
		
		ЗаполнитьЗначенияСвойств(ДвижениеРегистраКонцентраций, ЭтотОбъект);
		ЗаполнитьЗначенияСвойств(ДвижениеРегистраКонцентраций, ТекущаяСтрока);
		ЗаполнитьЗначенияСвойств(ДвижениеРегистраКонцентраций, СтруктураЗаполненияКонцентраций);
		
	КонецЦикла;
	
	// ДАВ 20.11.15 ++
	РегистрыСведений.ДанныеКалендаряЭколога.УдалитьЗапись(Ссылка);
	РегистрыСведений.ДанныеКалендаряЭколога.ДобавитьЗапись(Ссылка, Перечисления.ВидыСобытийКалендаряЭколога.ИстекСрокДействияРазрешительногоДокумента, ДатаОкончания, Перечисления.ТипыДокументовДляСроковПоКалендарюЭколога.ПравоВодоотведения);	
	// --
	
	Движения.КонцентрацииЗВВМестахСбросаСточныхВод.Записывать = Истина;
	
	Для Каждого СтрокаКонцентрацияВМестеСброса Из КонцентрацияЗВВМестеСбросаСточныхВод Цикл 
		
		Движение = Движения.КонцентрацииЗВВМестахСбросаСточныхВод.Добавить();
		
		Движение.Период							 = ДатаНачала;
		Движение.Организация					 = Организация;
		Движение.ВодныйОбъект					 = ВодныйОбъект;
		Движение.ВыпускВВоду					 = СтрокаКонцентрацияВМестеСброса.ВыпускВВоду;
		Движение.ЗагрязняющееВещество			 = СтрокаКонцентрацияВМестеСброса.ЗагрязняющееВещество;
		Движение.ТочкаКонтроля					 = СтрокаКонцентрацияВМестеСброса.ТочкаКонтроля;
		Движение.Концентрация					 = СтрокаКонцентрацияВМестеСброса.Концентрация;
		Движение.ДатаОкончанияДействияНорматива	 = ДатаОкончания;
		
	КонецЦикла; // Для Каждого СтрокаКонцентрацияВМестеСброса Из КонцентрацияЗВВМестеСбросаСточныхВод Цикл	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументовСправочников.ЗаполнитьДокумент(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)	
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если НЕ Поквартально Тогда
		
		Для каждого СтрокаВыпуск Из Выпуски Цикл
			
			СтрокаВыпуск.ОбъемДопустимогоСброса1Квартал = 0;
			СтрокаВыпуск.ОбъемДопустимогоСброса2Квартал = 0;
			СтрокаВыпуск.ОбъемДопустимогоСброса3Квартал = 0;
			СтрокаВыпуск.ОбъемДопустимогоСброса4Квартал = 0;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// 1С-КСУ Казанцев И.В. 10.04.17 13:30 Добавление ГУИД для каждой строки условия для связи с отчетом.
	Для Каждого ТекСтрокаУсловия Из ЛицензионныеУсловия Цикл
		Если Не ЗначениеЗаполнено(ТекСтрокаУсловия.ГУИДУсловия) Тогда
			НовыйГУИД = Новый УникальныйИдентификатор;
			ТекСтрокаУсловия.ГУИДУсловия = НовыйГУИД;
		КонецЕсли;
	КонецЦикла;
	// 1С-КСУ Казанцев И.В. 10.04.17 13:30 Добавление ГУИД для каждой строки условия для связи с отчетом. Конец.
КонецПроцедуры    

Процедура ПриЗаписи( Отказ )

// 1СКСУ - Казанцев И.В. 19.01.17 10:50
// При провере АПК не обнаружена конструкция "Если ОбменДанными.Загрузка Тогда ...".
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
// 1СКСУ - Казанцев И.В. 19.01.17 10:50 Конец
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Ссылка ) И Не Проведен Тогда
		Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Ссылка );
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением( Отказ )

// 1СКСУ - Казанцев И.В. 19.01.17 10:50
// При провере АПК не обнаружена конструкция "Если ОбменДанными.Загрузка Тогда ...".
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
// 1СКСУ - Казанцев И.В. 19.01.17 10:50 Конец
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Ссылка ) Тогда
		Если Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Ссылка ) Тогда 
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли
