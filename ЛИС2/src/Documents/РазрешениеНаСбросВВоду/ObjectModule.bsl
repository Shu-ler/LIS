#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.РазрешенныеКСбросуВВодныеОбъектыЗагрязняющиеВещества.Записывать = Истина;
	Движения.НормативныеОбъемыСбросовВВодныеОбъекты.Записывать = Истина;
	
	Для Каждого ТекущаяСтрока Из ТаблицаЗВ Цикл 		
		
		СтрокаВыпуска = ТаблицаВыпусков.Найти(ТекущаяСтрока.ИдентификаторВыпуска, "ИдентификаторСтроки");
		КоличествоЛет = Год(СтрокаВыпуска.КонецДействияРазрешения)-Год(СтрокаВыпуска.НачалоДействияРазрешения)+1;
		ВодныйОбъект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВыпуска.Выпуск, "ВодныйОбъект");
		
		Для НомерГода = 1 По КоличествоЛет Цикл
			Если ПериодичностьРазрешения = Перечисления.ПериодичностьРазрешительнойДокументации.ПоГодам Тогда				
				Если ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(НомерГода)] <> 0 Или Не ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(НомерГода)] <> 0 Тогда
						 
					Движение = Движения.РазрешенныеКСбросуВВодныеОбъектыЗагрязняющиеВещества.Добавить();
			        ЗаполнитьЗначенияСвойств(Движение, ЭтотОбъект, "Организация, ПроизводственнаяПлощадка");					
					ЗаполнитьЗначенияСвойств(Движение, ТекущаяСтрока);
										
					ДатаНачала = ДобавитьМесяц(СтрокаВыпуска.НачалоДействияРазрешения, (НомерГода-1)*12);
					Если Не НомерГода = 1 Тогда
						ДатаНачала = НачалоГода(ДатаНачала);
					КонецЕсли;
					ДатаОкончания = ?(НомерГода = КоличествоЛет, КонецДня(СтрокаВыпуска.КонецДействияРазрешения), КонецГода(ДатаНачала));
					
					СтруктураЗаполнения = Новый Структура("Период, ДатаОкончанияДействияНорматива, ПДС, ВСС, ВыпускВВоду, ВодныйОбъект, Концентрация, КонцентрацияЛимит",
						ДатаНачала, ДатаОкончания, ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(НомерГода)],
						ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(НомерГода)], СтрокаВыпуска.Выпуск, ВодныйОбъект, ТекущаяСтрока.СодержаниеЗВ, ТекущаяСтрока.КонцентрацияЛимит);
					
					ЗаполнитьЗначенияСвойств(Движение, СтруктураЗаполнения);
				КонецЕсли;
				
			ИначеЕсли ПериодичностьРазрешения = Перечисления.ПериодичностьРазрешительнойДокументации.Поквартально Тогда
				Для НомерКвартала = 1 По 4 Цикл
											
					Если ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(НомерГода) + "Квартал" + Строка(НомерКвартала)] <> 0 Или ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(НомерГода) + "Квартал" + Строка(НомерКвартала)] <> 0 Тогда
						
						Движение = Движения.РазрешенныеКСбросуВВодныеОбъектыЗагрязняющиеВещества.Добавить();
				        ЗаполнитьЗначенияСвойств(Движение, ЭтотОбъект, "Организация, ПроизводственнаяПлощадка");	
						ЗаполнитьЗначенияСвойств(Движение, ТекущаяСтрока);
												
						ДатаНачала = ДобавитьМесяц(СтрокаВыпуска.НачалоДействияРазрешения, ((НомерГода-1)*4+НомерКвартала-Число(Формат(СтрокаВыпуска.НачалоДействияРазрешения, "ДФ=к")))*3);
						Если Не НомерГода = 1 Или Не НомерКвартала = Число(Формат(СтрокаВыпуска.НачалоДействияРазрешения, "ДФ=к")) Тогда
							ДатаНачала = НачалоКвартала(ДатаНачала);
						КонецЕсли;

						ДатаОкончания = ?(НомерГода = КоличествоЛет И КонецКвартала(ДатаНачала) > СтрокаВыпуска.КонецДействияРазрешения,
							КонецДня(СтрокаВыпуска.КонецДействияРазрешения), КонецКвартала(ДатаНачала));
							
						СтруктураЗаполнения = Новый Структура("Период, ДатаОкончанияДействияНорматива, ПДС, ВСС, ВыпускВВоду, ВодныйОбъект, Концентрация, КонцентрацияЛимит",
							ДатаНачала, ДатаОкончания, ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(НомерГода) + "Квартал" + Строка(НомерКвартала)],
							ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(НомерГода) + "Квартал" + Строка(НомерКвартала)], СтрокаВыпуска.Выпуск,
							ВодныйОбъект, ТекущаяСтрока.СодержаниеЗВ, ТекущаяСтрока.КонцентрацияЛимит);
							
						ЗаполнитьЗначенияСвойств(Движение, СтруктураЗаполнения);						
					КонецЕсли;
				КонецЦикла;
	        КонецЕсли;
		КонецЦикла;
				
	КонецЦикла;
	
	// ДАВ 20.11.15 ++
	РегистрыСведений.ДанныеКалендаряЭколога.УдалитьЗапись(Ссылка);
	тзДатыОкончания = ТаблицаВыпусков.Выгрузить();
	тзДатыОкончания.Свернуть("КонецДействияРазрешения");
	Для Каждого стр Из тзДатыОкончания Цикл 
		РегистрыСведений.ДанныеКалендаряЭколога.ДобавитьЗапись(Ссылка,Перечисления.ВидыСобытийКалендаряЭколога.ИстекСрокДействияРазрешительногоДокумента, стр.КонецДействияРазрешения, Перечисления.ТипыДокументовДляСроковПоКалендарюЭколога.Сбросы);
	КонецЦикла;
	// --		
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументовСправочников.ЗаполнитьДокумент(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи( Отказ )

// 1СКСУ - Казанцев И.В. 19.01.17 10:50
// При провере АПК не обнаружена конструкция "Если ОбменДанными.Загрузка Тогда ...".
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
// 1СКСУ - Казанцев И.В. 19.01.17 10:50 Конец

	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Ссылка ) И Не Проведен Тогда
		Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Ссылка );
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением( Отказ )

// 1СКСУ - Казанцев И.В. 19.01.17 10:50
// При провере АПК не обнаружена конструкция "Если ОбменДанными.Загрузка Тогда ...".
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
// 1СКСУ - Казанцев И.В. 19.01.17 10:50 Конец

	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Ссылка ) Тогда
		Если Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Ссылка ) Тогда
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли
