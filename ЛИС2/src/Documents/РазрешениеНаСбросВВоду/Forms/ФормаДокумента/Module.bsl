#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	ПериодичностьПоквартально = Перечисления.ПериодичностьРазрешительнойДокументации.Поквартально;
	
	Если Объект.ПроизводственнаяПлощадка.КонтактнаяИнформация.Количество() > 0 Тогда 
		Адрес = Объект.ПроизводственнаяПлощадка.КонтактнаяИнформация[0].Представление;
	Иначе
		Адрес = "";
	КонецЕсли;
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
		ЭтотОбъект.ТолькоПросмотр = Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Объект.Ссылка );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере( Отказ, ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( "Документ проводится автоматически при утверждении", , , , Отказ );
			Возврат;
		КонецЕсли;
		
		Обработки.СозданиеНСИ.ПроверитьЗаполнениеРеквизитов( ЭтотОбъект, Отказ );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере( ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	ПослеЗаписиОбъектаБизнесПроцессаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием( Отказ, СтандартнаяОбработка )
	
	// Работа с бизнес-процессами
	Если Не ЗакрыватьБезусловно И ЗадачаИсполнителяНеЗавершенаНаСервере() Тогда 
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗакрытиеФормы", ЭтотОбъект );	
		ПоказатьВопрос( текОповещение, "Отправить на согласование документ '" + Объект.Ссылка + "'?", РежимДиалогаВопрос.ДаНет );

		Отказ				= Истина;
		ЗакрыватьБезусловно = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостью(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодичностьРазрешенияПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьВССПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Организация"" не заполнено", , "Объект.Организация", ,);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастей

&НаКлиенте
Процедура ТаблицаВыпусковВыпускНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Если нормативный документ не указан, открывается форма без отбора.
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
		СтандартнаяОбработка = Истина;
		Возврат;
	КонецЕсли; // Если Не ЗначениеЗаполнено(ПравоВодопотребления) Тогда
	
	// Список выпусков по нормативному документу.	
	Водозаборы = ПолучитьВыпускиПоПравуВодопотребленияСервер(Объект.ДокументОснование);
	
	ФиксНастройки = Новый НастройкиКомпоновкиДанных;
	
	элОтбора = ФиксНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	элОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Ссылка");
	элОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.ВСписке;
	элОтбора.ПравоеЗначение   = Водозаборы;
	элОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	элОтбора.Использование    = Истина;
	
	ПараметрыФормыВыбора = Новый Структура;
	
	ПараметрыФормыВыбора.Вставить("ФиксированныеНастройки", ФиксНастройки);
	ПараметрыФормыВыбора.Вставить("КлючНазначенияИспользования", "ОткрытьФормуСОтборомПоПравуВодоотведения");
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.ВыпускиВВоду.Форма.ФормаВыбора", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор,,,, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Данные = Элементы.ТаблицаВыпусков.ДанныеСтроки(Элементы.ТаблицаВыпусков.ТекущаяСтрока);
	Если НоваяСтрока ИЛИ НЕ ЗначениеЗаполнено(Данные.ИдентификаторСтроки) Тогда 
		Данные.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		УправлениеВидимостью(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ТаблицаЗВ.ДанныеСтроки(Элементы.ТаблицаЗВ.ТекущаяСтрока);
	Если НоваяСтрока Тогда
		ТекущиеДанные.ИдентификаторВыпуска = Элементы.ТаблицаВыпусков.ТекущиеДанные.ИдентификаторСтроки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаВыпусков.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Элементы.ТаблицаЗВ.ОтборСтрок = Новый ФиксированнаяСтруктура("ИдентификаторВыпуска", ТекущиеДанные.ИдентификаторСтроки);
		Если НЕ ЭтаФорма.ТолькоПросмотр Тогда // Инфотекс Белугин В.М. 07.09.2016
			ПересчетИтоговТаблицыЗВ();
		КонецЕсли; // Инфотекс Белугин В.М. 07.09.2016
		Если ЗначениеЗаполнено(ТекущиеДанные.НачалоДействияРазрешения) И ЗначениеЗаполнено(ТекущиеДанные.КонецДействияРазрешения) Тогда
			УправлениеВидимостью(ЭтаФорма);
		КонецЕсли;	
	КонецЕсли;    
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
		
	Оповещение = Новый ОписаниеОповещения("ТаблицаВыпусковПередУдалениемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Вы точно хотите удалить выделенные строки?", РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
		
	Оповещение = Новый ОписаниеОповещения("ТаблицаЗВПередУдалениемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, "Вы точно хотите удалить выделенные строки?", РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковНачалоДействияРазрешенияПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПриИзменении(Элемент)
	ПересчетИтоговТаблицыЗВ();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковКонецДействияРазрешенияПриИзменении(Элемент)
	
	ТаблицаВыпусковКонецДействияРазрешенияОбработкаВыбора(Элемент, Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения, Истина);
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковНачалоДействияРазрешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения) И Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения > ДобавитьМесяц(ВыбранноеЗначение,60) Тогда 
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(,"Разрешение не может быть выдано на период больше пяти лет. Выберите другое значение даты.");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения) И Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения < ВыбранноеЗначение Тогда 
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(,"Дата начала не может быть больше даты окончания. Выберите другое значение даты.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковКонецДействияРазрешенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения) И ВыбранноеЗначение > ДобавитьМесяц(Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения,60) Тогда 
		ВыбранноеЗначение = КонецМесяца(ДобавитьМесяц(Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения,59));
		ПоказатьПредупреждение(,
	        "Разрешение выдается на срок не более 5 лет!
			|Расчет произведен на 5 лет, от даты начала разрешения.");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения) И ВыбранноеЗначение < Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения Тогда 
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(,"Дата окончания не может быть меньше даты начала. Выберите другое значение даты.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковВыпускОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
	
		СписокВыпусков = ПолучитьВыпускиПоПравуВодопотребленияСервер(Объект.ДокументОснование);
		
		ТекДанные = Элементы.ТаблицаВыпусков.ТекущиеДанные;
		
		Если ТекДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли; // Если ТекДанные = Неопределено Тогда 
		
		Если СписокВыпусков.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда 
			
			СтандартнаяОбработка = Ложь;
			
			ТекстСообщения = "Выбранный выпуск отсутствует в разрешительном документе.";
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, СтрШаблон("Объект.ТаблицаВыпусков[%1].Выпуск", ТекДанные.ПолучитьИдентификатор()));
			                                                                           
		КонецЕсли; // Если СписокВодозаборов.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
		
	КонецЕсли; // Если ЗначениеЗаполнено(Объект.РазрешительныйДокумент) Тогда
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	Если НЕ Форма.Элементы.ТаблицаВыпусков.ТекущаяСтрока = Неопределено Тогда
		ДатаНачала = Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения;
		ДатаОкончания = ?(Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения > ДобавитьМесяц(Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения,60),
		ДобавитьМесяц(Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.НачалоДействияРазрешения,59),
		Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.КонецДействияРазрешения);
		ИдентификаторВыпуска = Форма.Элементы.ТаблицаВыпусков.ТекущиеДанные.ИдентификаторСтроки;
	ИначеЕсли НЕ Форма.Объект.ТаблицаВыпусков.Количество() = 0 Тогда
		ДатаНачала = Форма.Элементы.ТаблицаВыпусков.ДанныеСтроки(0).НачалоДействияРазрешения;
		ДатаОкончания = Форма.Элементы.ТаблицаВыпусков.ДанныеСтроки(0).КонецДействияРазрешения;
		ИдентификаторВыпуска = Форма.Элементы.ТаблицаВыпусков.ДанныеСтроки(0).ИдентификаторСтроки;
	Иначе
		Возврат;
	КонецЕсли;
	
	
	Форма.Элементы.ТаблицаЗВКонцентрацияЛимит.Видимость = Форма.Объект.ОтображатьВСС;
	
	Если ДатаНачала <> '00010101' И ДатаОкончания <> '00010101' Тогда
		
		КоличествоЛет = Год(ДатаОкончания)-Год(ДатаНачала);
				
		Для Индекс = 0 По 5 Цикл
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость = (КоличествоЛет > Индекс - 1);
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1)].Заголовок = "НДС " + Формат(Год(ДатаНачала) + Индекс,"ЧГ=;")+ ", т/год";
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1)].Доступность = НЕ (Форма.Объект.ПериодичностьРазрешения = Форма.ПериодичностьПоквартально);
					
			Если Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость И Индекс = 0 Тогда
				Кварт = 1;
				Пока Кварт <= 4 Цикл
					Если Кварт < Число(Формат(ДатаНачала, "ДФ=к")) Тогда
						Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Ложь;
						Если Форма.Объект.ОтображатьВСС Тогда
							Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВВССГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
						КонецЕсли;
					Иначе
						Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Истина;
						Если Форма.Объект.ОтображатьВСС Тогда
							Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВВССГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
						КонецЕсли;
					КонецЕсли;	
					Кварт = Кварт + 1;
				КонецЦикла;
			ИначеЕсли Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость Тогда	
				Кварт = 1;
				Пока Кварт <= 4 Цикл
					Если Кварт > Число(Формат(ДатаОкончания, "ДФ=к")) И Индекс = КоличествоЛет Тогда
						Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Ложь;
					Иначе
						Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Истина;
					КонецЕсли;
					
					Если Форма.Объект.ОтображатьВСС Тогда
						Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВВССГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость = Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость;
					КонецЕсли;
					Кварт = Кварт + 1;
				КонецЦикла;	
			КонецЕсли;
			
			Если Форма.Объект.ОтображатьВСС Тогда 
				Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].Видимость = Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость;
				Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВВССГод" + Строка(Индекс + 1)].Заголовок = СтрЗаменить(Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1)].Заголовок, "НДС", "ВСС");
				Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1) + "Кварталы"].Видимость = Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].Видимость;
			КонецЕсли;
				
		КонецЦикла;
		
	Иначе
		
		Для Индекс = 0 По 5 Цикл
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость = 0;
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].Видимость = 0;
		КонецЦикла
	
	КонецЕсли;
	
	Если НЕ Форма.Объект.ОтображатьВСС Тогда 
		Для Индекс = 0 По 5 Цикл
			Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаВССГод" + Строка(Индекс + 1)].Видимость = 0;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ Форма.ТолькоПросмотр Тогда   // Инфотекс Белугин В.М. 07.09.2016
		
		Отбор = Новый Структура("ИдентификаторВыпуска", ИдентификаторВыпуска);
		МассивСтрокЗВ = Форма.Объект.ТаблицаЗВ.НайтиСтроки(Отбор);	
		Для Каждого ТекущаяСтрока Из МассивСтрокЗВ Цикл
			
			Если НЕ Форма.Элементы.ТаблицаЗВКонцентрацияЛимит.Видимость Тогда 				
				ТекущаяСтрока.КонцентрацияЛимит = 0; 				
			КонецЕсли;
			
			Для Индекс = 0 По 5 Цикл
				Если НЕ Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].Видимость Тогда
					ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(Индекс + 1)] = 0;
					ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(Индекс + 1)] = 0;
					Для Кварт = 1 По 4 Цикл
						ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
						ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
					КонецЦикла;
				Иначе
					Для Кварт = 1 По 4 Цикл			
						Если НЕ Форма.Элементы.ТаблицаЗВ.ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1)].ПодчиненныеЭлементы["ТаблицаЗВГруппаГод" + Строка(Индекс + 1) + "Кварталы"].ПодчиненныеЭлементы["ТаблицаЗВРазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)].Видимость Тогда
							ТекущаяСтрока["РазрешенныйСбросНормативГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
							ТекущаяСтрока["РазрешенныйСбросЛимитГод" + Строка(Индекс + 1) + "Квартал" + Строка(Кварт)] = 0;
						КонецЕсли;		
					КонецЦикла;
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли; 	// Инфотекс Белугин В.М. 07.09.2016
			
КонецПроцедуры

&НаКлиенте
Процедура ПересчетИтоговТаблицыЗВ()
	
	Для НомерГода = 1 По 6 Цикл
		ЭтаФорма["ИтогГод" + НомерГода] = 0; 
		ЭтаФорма["ИтогГод" + НомерГода + "Л"] = 0;
		Для НомерКвартала = 1 По 4 Цикл
			ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала] = 0; 
			ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала + "Л"] = 0; 
		КонецЦикла;
	КонецЦикла;

	ВыбранныеСтроки = Объект.ТаблицаЗВ.НайтиСтроки(Новый Структура("ИдентификаторВыпуска",Элементы.ТаблицаВыпусков.ТекущиеДанные.ИдентификаторСтроки));
	Для Каждого ТекСтрока Из ВыбранныеСтроки Цикл
		Для НомерГода = 1 По 6 Цикл
			Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
				ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода] = 0;
				ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода] = 0;
			КонецЕсли;
			Для НомерКвартала = 1 По 4 Цикл
				ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала] = ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала] + ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода + "Квартал" + НомерКвартала]; 
				ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала + "Л"] = ЭтаФорма["ИтогГод" + НомерГода + "Кв" + НомерКвартала + "Л"] + ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода + "Квартал" + НомерКвартала];
				Если Объект.ПериодичностьРазрешения = ЭтаФорма.ПериодичностьПоквартально Тогда
					ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода] = ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода] + ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода + "Квартал" + НомерКвартала];
					ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода] = ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода] + ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода + "Квартал" + НомерКвартала];
				КонецЕсли;
			КонецЦикла;
			ЭтаФорма["ИтогГод" + НомерГода] = ЭтаФорма["ИтогГод" + НомерГода] + ТекСтрока["РазрешенныйСбросНормативГод" + НомерГода]; 
			ЭтаФорма["ИтогГод" + НомерГода + "Л"] = ЭтаФорма["ИтогГод" + НомерГода] + ТекСтрока["РазрешенныйСбросЛимитГод" + НомерГода]; 
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыпусковПередУдалениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда		
		
		ВыделенныеСтроки = Элементы.ТаблицаВыпусков.ВыделенныеСтроки;
		УдаляемыеСтроки = Новый Массив;
		
		Для Каждого УИНСтроки Из ВыделенныеСтроки Цикл
			НомерСтроки = Объект.ТаблицаВыпусков.Индекс(Объект.ТаблицаВыпусков.НайтиПоИдентификатору(УИНСтроки));
			УдаляемыеСтроки.Добавить(Объект.ТаблицаВыпусков.Получить(НомерСтроки));
		КонецЦикла;

		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл			
			
			УдаляемыеСтрокиЗВ = Объект.ТаблицаЗВ.НайтиСтроки(Новый Структура("ИдентификаторВыпуска",УдаляемаяСтрока.ИдентификаторСтроки));
			Для Каждого УдаляемаяСтрокаЗВ Из УдаляемыеСтрокиЗВ Цикл
				Объект.ТаблицаЗВ.Удалить(УдаляемаяСтрокаЗВ);
			КонецЦикла;
			
			Объект.ТаблицаВыпусков.Удалить(УдаляемаяСтрока);
			
		КонецЦикла;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПередУдалениемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда		
		
		ВыделенныеСтроки = Элементы.ТаблицаЗВ.ВыделенныеСтроки;
		УдаляемыеСтроки = Новый Массив;
		
		Для Каждого УИНСтроки Из ВыделенныеСтроки Цикл
			НомерСтроки = Объект.ТаблицаЗВ.Индекс(Объект.ТаблицаЗВ.НайтиПоИдентификатору(УИНСтроки));
			УдаляемыеСтроки.Добавить(Объект.ТаблицаЗВ.Получить(НомерСтроки));
		КонецЦикла;
		
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			Объект.ТаблицаЗВ.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		Модифицированность = Истина;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗВПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Объект.ТаблицаВыпусков.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для внесения загрязняющих веществ необходимо заполнить таблицу выпусков.",, "Объект.ТаблицаВыпусков");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлощадкаПриИзменении(Элемент)
	
	ПолучитьАдрес();
	
КонецПроцедуры

&НаСервере
Процедура  ПолучитьАдрес()
	
	Если Объект.ПроизводственнаяПлощадка.КонтактнаяИнформация.Количество() > 0 Тогда 
		Адрес = Объект.ПроизводственнаяПлощадка.КонтактнаяИнформация[0].Представление;
	Иначе
		Адрес = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВыпускиПоПравуВодопотребленияСервер(ПравоВодоотведения)
	
	Возврат ОбщегоНазначенияКлиентСерверУООС.ПолучитьВыпускиПоПравуВодопотребления(ПравоВодоотведения);
	
КонецФункции // Функция ПолучитьВыпускиПоПравуВодопотребленияСервер(ПравоВодоотведения)

#КонецОбласти

// Работа с бизнес-процессами
#Область ФункцииБизнесПроцессов

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытиеФормы( Результат, ДополнительныеПараметры ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		текКомандаВыполнения = ПолучитьКомандуВыполнения();
		Если текКомандаВыполнения <> Неопределено Тогда 
			ВыполнитьЗадачу( текКомандаВыполнения );
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗадачу( Команда ) Экспорт
	
	Если ПроверитьЗаполнениеДанныхНаСервере() Тогда 
		стрКомментарий = "";
		
		текОповещение  = Новый ОписаниеОповещения( "ПослеВводаКомментария", ЭтотОбъект );	
		
		ПоказатьВводСтроки( текОповещение, стрКомментарий, "Введите комментарий выполненой задачи" );
		
		ЗавершитьЗадачуНаСервере( Команда.Имя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКомментария( фпКомментарий, фпПараметры ) Экспорт
	
	Если Не ПустаяСтрока( фпКомментарий ) Тогда
		УстановитьКомментарийЗадачиНаСервере( ЭтотОбъект.БП_ВыполняемаяЗадача, фпКомментарий );	
	КонецЕсли;
	
	Если Открыта() Тогда 
		Закрыть();
	КонецЕсли;
	
	Оповестить( "БП_ВыполнениеЗадачи", Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура БП_ВыполнитьЗадачу( Команда )
	
	БП_ПоддержкаБизнесПроцессовКлиент.ВыполнитьЗадачу( ЭтотОбъект, Команда );
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомандуВыполнения()
	
	Для Каждого текКоманда Из Команды Цикл 	
		Если текКоманда.Действие = "БП_ВыполнитьЗадачу" Тогда 
			Возврат текКоманда;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗадачаИсполнителяНеЗавершенаНаСервере()
	
	Возврат ( Элементы.Найти( "БП_ВыполняемаяЗадача" ) <> Неопределено И
		 	  Не ЭтотОбъект.БП_ВыполняемаяЗадача.Выполнена И
		 	  ЭтотОбъект.БП_ВыполняемаяЗадача.ТочкаМаршрута.Порядок = 1 );
	
КонецФункции

&НаСервере
Функция ПроверитьЗаполнениеДанныхНаСервере()

	Возврат ИСТИНА; //РеквизитФормыВЗначение( "Объект" ).ПроверитьЗаполнениеДанных();

КонецФункции

&НаСервере
Процедура УстановитьРеквизитыПоБизнесПроцессуНаСервере()

	Обработки.СозданиеНСИ.УстановитьРеквизитОрганизация( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, Объект.Организация );
	
	Обработки.СозданиеНСИ.УстановитьСрокВыполненияПоследнейЗадачиБизнесПроцесса( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс );
								
	Обработки.СозданиеНСИ.УстановитьРеквизитПользователь( ЭтотОбъект.БП_ВыполняемаяЗадача, ПараметрыСеанса.ТекущийПользователь );
	
	Обработки.СозданиеНСИ.УстановитьРеквизитПредставлениеОбъекта( ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, Объект );
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьБизнесПроцессСогласованияНаСервере()
	
	Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Объект.Ссылка );
	
	БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиОбъектаБизнесПроцессаНаСервере()
	
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		ЗапуститьБизнесПроцессСогласованияНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьЗадачуНаСервере( фпИмяКоманды )

	текНомер  = Сред( фпИмяКоманды, 12 );
	текСтатус = ЭтаФорма["БП_Статус" + текНомер];
	
	НачатьТранзакцию();
	
	БП_ПоддержкаБизнесПроцессовСервер.ЗавершитьЗадачу( ЭтотОбъект.БП_ВыполняемаяЗадача, ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, текСтатус );

	Если ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс.Завершен Тогда 
		Попытка
			РеквизитФормыВЗначение( "Объект" ).Записать( РежимЗаписиДокумента.Проведение );
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( ОписаниеОшибки() );
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Обработки.СозданиеНСИ.УстановитьРеквизитыПоБизнесПроцессу( ЭтотОбъект.БП_ВыполняемаяЗадача, Объект.Ссылка );
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьКомментарийЗадачиНаСервере( фпЗадача, фпКомментарий )
	
	Обработки.СозданиеНСИ.УстановитьРеквизитКомментарий( фпЗадача, фпКомментарий );
	
КонецПроцедуры

// 1С-КСУ Казанцев И.В. Загрузка данных ТЧ из внешнего файла.
&НаКлиенте
Процедура ЗагрузитьИзВнешнегоФайлаВодозаборы(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед заполнением необходимо сначала записать документ");	
		
	Иначе
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Документ", Объект.Ссылка);
//		ПараметрыФормы.Вставить("ТипОперацииВводаОстатков", ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.РазрешениеНаСбросВВоду"));
		ПараметрыФормы.Вставить("ПериодИзДатыДокумента", Истина);
		ПараметрыФормы.Вставить("Таблица", "РазрешениеНаСбросВодовыпуски");

		ОткрытьФорму(
			"Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма",
			ПараметрыФормы,
			ЭтаФорма,
			УникальныйИдентификатор);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзВнешнегоФайлаЗВ(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед заполнением необходимо сначала записать документ");	
		
	ИначеЕсли ЭтаФорма.Элементы.ТаблицаВыпусков.ТекущаяСтрока = Неопределено Тогда	
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед внесением сведений о загрязняющих веществах необходимо выбрать водозабор.");	
		
	Иначе
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Документ", Объект.Ссылка);
//		ПараметрыФормы.Вставить("ТипОперацииВводаОстатков", ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.РазрешениеНаСбросВВоду"));
		ПараметрыФормы.Вставить("ИдентификаторВыпуска", ЭтаФорма.Элементы.ТаблицаВыпусков.ТекущиеДанные.ИдентификаторСтроки);
		ПараметрыФормы.Вставить("ПериодИзДатыДокумента", Истина);
		ПараметрыФормы.Вставить("Таблица", "РазрешениеНаСбросЗВ");

		ОткрытьФорму(
			"Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма",
			ПараметрыФормы,
			ЭтаФорма,
			УникальныйИдентификатор);
		
	КонецЕсли;
КонецПроцедуры
// 1С-КСУ Казанцев И.В. Загрузка данных ТЧ из внешнего файла. Конец.

#КонецОбласти
