#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ОбщегоНазначения.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	СформироватьДеревоПодчинения();
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ЭлементОтбора.Использование = Истина;
	    ЭлементОтбора.ПравоеЗначение = Параметры.Отбор.Владелец;
		
		Элементы.ПлощадкиСписок.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПлощадкиСписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ПлощадкиСписок.ТекущиеДанные.Вид = "Площадка" Тогда
		ПлощадкаОтбора = ОпределитьТекущуюПлощадкуСписка();
		Если ПлощадкаОтбора = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", ПлощадкаОтбора, , , Ложь);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", ПлощадкаОтбора, , , Истина);
		КонецЕсли;
	ИначеЕсли Элементы.ПлощадкиСписок.ТекущиеДанные.Вид = "Организация" Тогда
		ПлощадкиОтбора = ОпределитьПодчиненныеПлощадкиСписка();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Владелец", ПлощадкиОтбора, ВидСравненияКомпоновкиДанных.ВСписке, , Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОпределитьТекущуюПлощадкуСписка()
	
	ПлощадкаОтбора = Неопределено;
	
	ТекущиеДанные = Элементы.ПлощадкиСписок.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ПлощадкаОтбора = ТекущиеДанные.Наименование;
	КонецЕсли;
	
	Возврат ПлощадкаОтбора;
	
КонецФункции

&НаКлиенте
Функция ОпределитьПодчиненныеПлощадкиСписка()
	
	ТекущиеДанные = Элементы.ПлощадкиСписок.ТекущиеДанные;
	СписокПодчиненныхЭлементов = ТекущиеДанные.ПолучитьЭлементы();
	
	ПлощадкиОтбора = Новый СписокЗначений;
	ПлощадкиОтбора = ЗаполнитьПлощадкиОтбора(СписокПодчиненныхЭлементов, ПлощадкиОтбора);
			
	Возврат ПлощадкиОтбора;
	
КонецФункции

&НаКлиенте
Функция ЗаполнитьПлощадкиОтбора(СписокПодчиненныхЭлементов, ПлощадкиОтбора)
	
	Для Каждого ПодчиненныйЭлемент Из СписокПодчиненныхЭлементов Цикл
		пЭлементы = ПодчиненныйЭлемент.ПолучитьЭлементы();
		Если ПодчиненныйЭлемент.Вид = "Площадка" Тогда
			ПлощадкиОтбора.Добавить(ПодчиненныйЭлемент.Наименование);
		КонецЕсли;
		Если НЕ пЭлементы.Количество() = 0 Тогда
			ЗаполнитьПлощадкиОтбора(пЭлементы, ПлощадкиОтбора);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПлощадкиОтбора;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоПодчинения()
	
	ИсходноеДерево = Новый ДеревоЗначений;
	ИсходноеДерево.Колонки.Добавить("Наименование");
	ИсходноеДерево.Колонки.Добавить("Вид");
	ИсходноеДерево.Колонки.Добавить("Использование");
	
	ВерхнийУровень = ИсходноеДерево.Строки.Добавить();
	ВерхнийУровень.Наименование = "Все организации";
	ВерхнийУровень.Вид = "Организация";
	ВерхнийУровень.Использование = Истина;
	
	ВерхнийУровеньСтроки = ВерхнийУровень.Строки;
	
	Запрос = Новый Запрос(
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	Организации.Ссылка КАК Ссылка,
	 |	Организации.Родитель КАК Родитель
	 |ИЗ
	 |	Справочник.Организации КАК Организации
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Ссылка ИЕРАРХИЯ");
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Родитель) Тогда
			
			Родитель = ВерхнийУровень;
			
		Иначе
			
			Родитель = ВерхнийУровеньСтроки.Найти(Выборка.Родитель, "Наименование", Истина);
			
		КонецЕсли;	
		
		Если Родитель = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Родитель.Строки.Добавить();
		НоваяСтрока.Наименование = Выборка.Ссылка;
		НоваяСтрока.Вид = "Организация";
		НоваяСтрока.Использование = Истина;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ПроизводственныеПлощадки.Ссылка КАК Ссылка,
	 |	ПроизводственныеПлощадки.Владелец КАК Владелец
	 |ИЗ
	 |	Справочник.ПроизводственныеПлощадки КАК ПроизводственныеПлощадки");
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.Владелец) Тогда
			
			Родитель = Неопределено;
			
		Иначе
			
			Родитель = ВерхнийУровеньСтроки.Найти(Выборка.Владелец, "Наименование", Истина);
			
		КонецЕсли;	
		
		Если Родитель = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Родитель.Строки.Добавить();
		НоваяСтрока.Наименование = Выборка.Ссылка;
		НоваяСтрока.Вид = "Площадка";
		НоваяСтрока.Использование = Истина;
		
	КонецЦикла;
	 	
	ЗначениеВРеквизитФормы(ИсходноеДерево, "ДеревоПодчинения");
	
КонецПроцедуры

#КонецОбласти


