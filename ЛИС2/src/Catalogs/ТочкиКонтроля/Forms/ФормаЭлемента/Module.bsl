
#Область ОбработчикиСобытийформы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.ОбъектКонтроля) И ЗначениеЗаполнено(Объект.ОбъектОтбораПроб) 
		И ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВыпускиВВоду") Тогда
		Объект.ОбъектКонтроля = Объект.ОбъектОтбораПроб.ПроизводственнаяПлощадка;
	КонецЕсли;
	
	УстановитьТипыЗначений();
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
		ЭтотОбъект.ТолькоПросмотр = Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Объект.Ссылка );
	КонецЕсли;
	
	ВидимостьЛинейногоОбъекта(); // (++) Зиновьев А.В., 28.02.2017
	
	// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации.
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
	// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации. Конец.
	
КонецПроцедуры // Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		Обработки.СозданиеНСИ.ПроверитьЗаполнениеРеквизитов( ЭтотОбъект, Отказ );
	КонецЕсли;
	
	// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации.
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации. Конец.
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере( ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	ПослеЗаписиОбъектаБизнесПроцессаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием( Отказ, СтандартнаяОбработка )
	
	// Работа с бизнес-процессами
	Если Не ЗакрыватьБезусловно И ЗадачаИсполнителяНеЗавершенаНаСервере() Тогда 
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗакрытиеФормы", ЭтотОбъект );	
		ПоказатьВопрос( текОповещение, "Отправить на согласование введенные данные о точке контроля '" + Объект.Ссылка + "'?", РежимДиалогаВопрос.ДаНет );

		Отказ				= Истина;
		ЗакрыватьБезусловно = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

&НаСервере
Процедура УстановитьТипыЗначений()
	
	Элем = ЭтаФорма.Элементы;
	
	Если ЗначениеЗаполнено(Объект.ОбъектКонтроля) Тогда
		
		МассивТиповОбъектовКонтроля = Новый Массив;
		// (++) Зиновьев А.В., 10.04.2017
		// Убрал зависимость объекта контроля от выбранного объекта отбора проб. Старый вариант отбора под комментарием.
		//Если ЗначениеЗаполнено(Объект.ОбъектОтбораПроб) Тогда
			
			//Если ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СанитарноЗащитныеЗоны") 
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СелитебныеЗоны")
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Водозаборы")
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Скважины")
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВыпускиВВоду")Тогда
			//	
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки")); // (++) Зиновьев А.В., 26.01.2017																								   																					
			//	
			//ИначеЕсли ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВодныеОбъекты") Тогда
				
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛинейныеОбъекты"));
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки"));
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
				
			//КонецЕсли;
		//	
		//Иначе
		//	
		//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛинейныеОбъекты"));
		//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки"));
		//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
		//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ВодныеОбъекты"));
		//	
		//КонецЕсли;
		// (--) Зиновьев А.В., 10.04.2017
		Если ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ПроизводственныеПлощадки") Тогда
			
			МассивТиповОбъектовОтбораПроб = Новый Массив;
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СанитарноЗащитныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СелитебныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Водозаборы"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Скважины"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВыпускиВВоду"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВодныеОбъекты"));
			
			Элем.ОбъектОтбораПроб.Видимость = Истина;
			
		ИначеЕсли ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ЛицензионныеУчастки") Тогда
			
			МассивТиповОбъектовОтбораПроб = Новый Массив;
			//(++) Зиновьев А.В., 17.01.2017
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СанитарноЗащитныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СелитебныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Водозаборы"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Скважины"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВыпускиВВоду"));
			//(--) Зиновьев А.В., 17.01.2017 
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВодныеОбъекты"));
			
			Элем.ОбъектОтбораПроб.Видимость = Истина;
			
		ИначеЕсли ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ЛинейныеОбъекты") Тогда
			
			МассивТиповОбъектовОтбораПроб = Новый Массив;
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВодныеОбъекты"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СанитарноЗащитныеЗоны")); // (++) Зиновьев А.В., 07.04.2017																								   
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СелитебныеЗоны")); // (++) Зиновьев А.В., 07.04.2017
			
			Элем.ОбъектОтбораПроб.Видимость = Истина;
				
		ИначеЕсли ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ВодныеОбъекты") Тогда
			
			Элем.ОбъектОтбораПроб.Видимость = Ложь;
			
		КонецЕсли;
		
		//(++) Курносенко А.А., 22.08.2017
		// Добавлен новый тип значения в реквизит ОбъектОтбораПроб
		Если МассивТиповОбъектовОтбораПроб <> Неопределено Тогда
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ИсточникиЗагрязнения"));
		КонецЕсли;	
		
		//(--) Курносенко А.А., 22.08.2017 
			
		Элем.ОбъектКонтроля.ОграничениеТипа	 = Новый ОписаниеТипов(МассивТиповОбъектовКонтроля);
		Элем.ОбъектКонтроля.ВыбиратьТип		 = Истина;
		
		Элем.ОбъектОтбораПроб.ОграничениеТипа	 = Новый ОписаниеТипов(МассивТиповОбъектовОтбораПроб);
		Элем.ОбъектОтбораПроб.ВыбиратьТип		 = Истина;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.ОбъектОтбораПроб) Тогда
			
			// (++) Зиновьев А.В., 07.04.2017
			//Если ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Водозаборы") 
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Скважины")
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СанитарноЗащитныеЗоны") 
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СелитебныеЗоны") 
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВыпускиВВоду") Тогда
			//	
			//	МассивТиповОбъектовКонтроля = Новый Массив;
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки")); // (++) Зиновьев А.В., 26.01.2017
			//	
			//ИначеЕсли ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СанитарноЗащитныеЗоны") 
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СелитебныеЗоны")
			//	ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВодныеОбъекты") Тогда 	
				
				МассивТиповОбъектовКонтроля = Новый Массив;
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки")); // (++) Зиновьев А.В., 26.01.2017
				МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛинейныеОбъекты"));
						
			//ИначеЕсли ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВодныеОбъекты") Тогда
			//	
			//	МассивТиповОбъектовКонтроля = Новый Массив;
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛинейныеОбъекты"));
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки"));
			//	МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
			// (--) Зиновьев А.В., 07.04.2017	
			//КонецЕсли;
			
			Элем.ОбъектКонтроля.ОграничениеТипа	 = Новый ОписаниеТипов(МассивТиповОбъектовКонтроля);
			Элем.ОбъектКонтроля.ВыбиратьТип		 = Истина;
			
		Иначе
			
			МассивТиповОбъектовОтбораПроб = Новый Массив;
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СанитарноЗащитныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.СелитебныеЗоны"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВодныеОбъекты"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Водозаборы"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.Скважины"));
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ВыпускиВВоду"));
			
			//(++) Курносенко А.А., 22.08.2017
			// Добавлен новый тип значения в реквизит ОбъектОтбораПроб
			МассивТиповОбъектовОтбораПроб.Добавить(Тип("СправочникСсылка.ИсточникиЗагрязнения"));	
			//(--) Курносенко А.А., 22.08.2017 
			
			Элем.ОбъектОтбораПроб.ОграничениеТипа	 = Новый ОписаниеТипов(МассивТиповОбъектовОтбораПроб);
			Элем.ОбъектОтбораПроб.ВыбиратьТип		 = Истина;
			
			МассивТиповОбъектовКонтроля = Новый Массив;
			МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛинейныеОбъекты"));
			МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ЛицензионныеУчастки"));
			МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ПроизводственныеПлощадки"));
			//МассивТиповОбъектовКонтроля.Добавить(Тип("СправочникСсылка.ВодныеОбъекты")); // (++) Зиновьев А.В., 10.04.2017
			
			Элем.ОбъектКонтроля.ОграничениеТипа	 = Новый ОписаниеТипов(МассивТиповОбъектовКонтроля);
			Элем.ОбъектКонтроля.ВыбиратьТип		 = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // Процедура УстановитьТипыЗначений()

// (++) Зиновьев А.В., 06.03.2017
&НаСервере
Процедура ВидимостьЛинейногоОбъекта()
	
	Если ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ЛинейныеОбъекты") Тогда
		
		Объект.ТочкаКонтроляНаходитсяНаЛинейномОбъекте 				 = Ложь;
		Объект.ЛинейныйОбъект 										 = ПредопределенноеЗначение("Справочник.ЛинейныеОбъекты.ПустаяСсылка");
		Элементы.ТочкаКонтроляНаходитсяНаЛинейномОбъекте.Доступность = Ложь;
		Элементы.ЛинейныйОбъект.Доступность 						 = Ложь;
		
	ИначеЕсли Объект.ТочкаКонтроляНаходитсяНаЛинейномОбъекте = Ложь Тогда 
		
		Элементы.ТочкаКонтроляНаходитсяНаЛинейномОбъекте.Доступность = Истина;
		Элементы.ЛинейныйОбъект.Доступность 						 = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры
// (--) Зиновьев А.В., 06.03.2017

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбъектКонтроляПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.ОбъектКонтроля) = Тип("СправочникСсылка.ВодныеОбъекты") Тогда
	
		Объект.ОбъектОтбораПроб = Неопределено;
	
	КонецЕсли; 
	
	УстановитьТипыЗначений();
	ВидимостьЛинейногоОбъекта(); // (++) Зиновьев А.В., 27.03.2017							
	
КонецПроцедуры // Процедура ОбъектКонтроляПриИзменении(Элемент)

&НаСервере
Функция ПолучитьСписокВодозаборовОрганизации(Организация)

	СписокВодозаборов = Новый Массив();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Водозаборы.Ссылка КАК Водозабор
	|ИЗ
	|	Справочник.Водозаборы КАК Водозаборы
	|ГДЕ
	|	Водозаборы.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда 
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			СписокВодозаборов.Добавить(Выборка.Водозабор);
			
		КонецЦикла;
			
	КонецЕсли;
	
	Возврат СписокВодозаборов;
	
КонецФункции

&НаСервере
Процедура УстановитьСвязиПараметровВыбораНаСервере()
	
	НовыйМассив = Новый Массив();
	НовыйМассивПараметров = Новый Массив();
	
	Если ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Скважины") Тогда
		
		Водозаборы = ПолучитьСписокВодозаборовОрганизации(Объект.Владелец);
		
		МассивПараметров = Новый ПараметрВыбора("Отбор.Владелец", Водозаборы);
		НовыйМассивПараметров.Добавить(МассивПараметров);
		
	ИначеЕсли ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.ВыпускиВВоду") ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.Водозаборы") Тогда
		
		НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Объект.Владелец",РежимИзмененияСвязанногоЗначения.Очищать));
		
	ИначеЕсли ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СелитебныеЗоны") ИЛИ ТипЗнч(Объект.ОбъектОтбораПроб) = Тип("СправочникСсылка.СанитарноЗащитныеЗоны") Тогда
		
		НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Владелец", РежимИзмененияСвязанногоЗначения.Очищать));
		
	КонецЕсли;
	
	НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ОбъектОтбораПроб.СвязиПараметровВыбора = НовыеСвязи;
	
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассивПараметров);
	Элементы.ОбъектОтбораПроб.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОтбораПробПриИзменении(Элемент)
	
	УстановитьСвязиПараметровВыбораНаСервере();
	
	УстановитьТипыЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Объект.ОбъектОтбораПроб = Неопределено;
	
	УстановитьСвязиПараметровВыбораНаСервере();
	
	УстановитьТипыЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОтбораПробНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УстановитьСвязиПараметровВыбораНаСервере();
	
КонецПроцедуры

// (++) Зиновьев А.В., 06.03.2017
&НаКлиенте
Процедура ТочкаКонтроляНаходитсяНаЛинейномОбъектеПриИзменении(Элемент)
	
	Элементы.ЛинейныйОбъект.Доступность = Объект.ТочкаКонтроляНаходитсяНаЛинейномОбъекте;
	Объект.ЛинейныйОбъект 				= ПредопределенноеЗначение("Справочник.ЛинейныеОбъекты.ПустаяСсылка")
	
КонецПроцедуры
// (--) Зиновьев А.В., 06.03.2017

#КонецОбласти

// Работа с бизнес-процессами
#Область ФункцииБизнесПроцессов

&НаКлиенте
Процедура ВыполнитьЗадачу( Команда ) Экспорт
	
	Если Модифицированность Тогда
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗаписи", ЭтотОбъект, Команда );	
		ПоказатьВопрос( текОповещение, "Для выполнения операции объект должен быть записан. Записать?", РежимДиалогаВопрос.ДаНет );		
	Иначе
		стрКомментарий = "";
		
		текОповещение  = Новый ОписаниеОповещения( "ПослеВводаКомментария", ЭтотОбъект );	
		
		ПоказатьВводСтроки( текОповещение, стрКомментарий, "Введите комментарий выполненой задачи" );
		
		ЗавершитьЗадачуНаСервере( Команда.Имя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписи( Результат, Команда ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Записать();
		ВыполнитьЗадачу( Команда );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытиеФормы( Результат, ДополнительныеПараметры ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		текКомандаВыполнения = ПолучитьКомандуВыполнения();
		Если текКомандаВыполнения <> Неопределено Тогда 
			ВыполнитьЗадачу( текКомандаВыполнения );
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКомментария( фпКомментарий, фпПараметры ) Экспорт
	
	Если Не ПустаяСтрока( фпКомментарий ) Тогда
		УстановитьКомментарийЗадачиНаСервере( ЭтотОбъект.БП_ВыполняемаяЗадача, фпКомментарий );	
	КонецЕсли;
	
	Если Открыта() Тогда 
		Закрыть();
	КонецЕсли;
	
	Оповестить( "БП_ВыполнениеЗадачи", Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура БП_ВыполнитьЗадачу( Команда )
	
	БП_ПоддержкаБизнесПроцессовКлиент.ВыполнитьЗадачу( ЭтотОбъект, Команда );
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомандуВыполнения()
	
	Для Каждого текКоманда Из Команды Цикл 	
		Если текКоманда.Действие = "БП_ВыполнитьЗадачу" Тогда 
			Возврат текКоманда;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗадачаИсполнителяНеЗавершенаНаСервере()
	
	Возврат ( Элементы.Найти( "БП_ВыполняемаяЗадача" ) <> Неопределено И
		 	  Не ЭтотОбъект["БП_ВыполняемаяЗадача"].Выполнена И
		 	  ЭтотОбъект["БП_ВыполняемаяЗадача"].ТочкаМаршрута.Порядок = 1 );
	
КонецФункции

&НаСервере
Процедура ЗапуститьБизнесПроцессСогласованияНаСервере()
	
	Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Объект.Ссылка );
	
	БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиОбъектаБизнесПроцессаНаСервере()
	
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		ЗапуститьБизнесПроцессСогласованияНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьЗадачуНаСервере( фпИмяКоманды )

	текНомер  = Сред( фпИмяКоманды, 12 );
	текСтатус = ЭтаФорма["БП_Статус" + текНомер];
	
	БП_ПоддержкаБизнесПроцессовСервер.ЗавершитьЗадачу( ЭтотОбъект.БП_ВыполняемаяЗадача, ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, текСтатус );

	Обработки.СозданиеНСИ.УстановитьРеквизитыПоБизнесПроцессу( ЭтотОбъект.БП_ВыполняемаяЗадача, Объект.Ссылка );
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьКомментарийЗадачиНаСервере( фпЗадача, фпКомментарий )
	
	Обработки.СозданиеНСИ.УстановитьРеквизитКомментарий( фпЗадача, фпКомментарий );
	
КонецПроцедуры

// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации.
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
КонецПроцедуры

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
// 1С-КСУ Казанцев И.В. 05.06.17 11:30 Использование стандартной обработки контактной информации. Конец.

#КонецОбласти
