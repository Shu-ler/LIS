
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОпределитьТекущуюОрганизациюСписка()
	
	ОрганизацияОтбора = Неопределено;
	
	ТекущиеДанные = Элементы.ОрганизацииСписок.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ОрганизацияОтбора = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	Возврат ОрганизацияОтбора;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацииСписокПриАктивизацииСтроки(Элемент)
	
	ОрганизацияОтбора = ОпределитьТекущуюОрганизациюСписка();
	
	Если ОрганизацияОтбора = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Дерево, "Владелец", ОрганизацияОтбора, , , Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Дерево, "Владелец", ОрганизацияОтбора, , , Истина);
	КонецЕсли;
		
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ОрганизацияОтбора = ОпределитьТекущуюОрганизациюСписка();
	
	Отказ = Истина;
		
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура);
	
	Если ЗначениеЗаполнено(Элемент.ТекущийРодитель) Тогда
		СтруктураПараметров.ЗначенияЗаполнения.Вставить("Родитель", Элемент.ТекущийРодитель);
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ОрганизацияОтбора) Тогда
			
		СтруктураПараметров.ЗначенияЗаполнения.Вставить("Владелец", ОрганизацияОтбора);
	
		//СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура("Владелец", ОрганизацияОтбора));
			
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаОбъекта", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

