#Область СлужебныеПроцедурыИФункции

// Возращает имена связанных с источником загрязнения
// регистров по виду источника загрязнения.
//
// Параметры:
// ВидИВ - СправочникСсылка.ВидыИВ - Вид источника загрязнения.
//
// Возвращаемое значение:
// Массив - Массив имен связанных регистров.
//
Функция ПолучитьИменаСвязанныхРегистраПоВидуИВ(ВидИВ) Экспорт 
	
	МассивИменРегистров = Новый Массив;
	
	Если ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ТрубчатаяПечь") Тогда 
		
		МассивИменРегистров.Добавить("СведенияОТрубчатыхПечах");
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Котельная") Тогда	
		
		// 28.07.17
		//МассивИменРегистров.Добавить("КотлыИсточниковВыделения");
		
		МассивИменРегистров.Добавить("КотлыИВ");
		МассивИменРегистров.Добавить("ПеременныеДанныеОКотлах");
		МассивИменРегистров.Добавить("СведенияОКотельных");
		
	// !!! Наполнить функцию по остальным видам ИВ
	
	КонецЕсли;	
	
	Возврат МассивИменРегистров;	
		
КонецФункции // Функция ПолучитьИмяСвязанногоРегистраПоВидуИВ(ВидИВ) Экспорт	

// Возвращает имя документа расчетной методики для источника загрязнения.
//
// Параметры:
// ИсточникЗагрязнения - СправочникСсылка.ИсточникиЗагрязнения - Источник, для которого
// требуется получить имя документа расчетной методики.
//
// Возвращаемое значение:
// Структура - содержит ключи "ИмяДокумента" и "ИмяФормы".
//
Функция ПолучитьПараметрыДокументаРасчетнойМетодики(ИсточникЗагрязнения) Экспорт 
	
	Возврат Новый Структура("ИмяДокумента, ИмяФормы");
		
КонецФункции // ПолучитьИмяДокументаРасчетнойМетодики()

// Возвращает подчиненные элементы для источника загрязнения.
//
// Параметры:
// фпСсылка - СправочникСсылка.ИсточникиЗагрязнения - Источник, для которого
// требуется получить подчиненные элементы.
//
Функция НайтиПодчиненныеЭлементы( фпСсылка ) Экспорт

	текЗапрос	= Новый Запрос(
		"ВЫБРАТЬ
		|	ИсточникиЗагрязнения.Ссылка
		|ИЗ
		|	Справочник.ИсточникиЗагрязнения КАК ИсточникиЗагрязнения
		|ГДЕ
		|	НЕ ИсточникиЗагрязнения.ПометкаУдаления И
		|	ИсточникиЗагрязнения.Родитель = &Родитель" );
		
	текЗапрос.УстановитьПараметр( "Родитель",	фпСсылка );
	
	Возврат текЗапрос.Выполнить().Выгрузить().ВыгрузитьКолонку( "Ссылка" );
	
КонецФункции // Функция НайтиПодчиненныеЭлементы( фпСсылка ) Экспорт

// Возвращает площадь сечения выходного отверстия ИЗА
//
// Параметры:
//  ИсточникЗагрязненияСсылка  - СправочникСсылка.ИсточникиЗагрязнения - исчтоник загрязнения
// Возвращаемое значение:
//   число - площадь м2
//
Функция ПлощадьСеченияТрубы(ИсточникЗагрязненияСсылка) Экспорт
	Перем Результат, РеквизитыТрубы;
	
	РеквизитыТрубы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсточникЗагрязненияСсылка, "ВидТрубы, ДлинаТруба, ШиринаТруба, Диаметр");
	
	Если РеквизитыТрубы.ВидТрубы = ПредопределенноеЗначение("Перечисление.ВидыТрубыИЗА.Круглая") Тогда
		Результат = 3.14 * РеквизитыТрубы.Диаметр * РеквизитыТрубы.Диаметр /4;
	ИначеЕсли РеквизитыТрубы.ВидТрубы = ПредопределенноеЗначение("Перечисление.ВидыТрубыИЗА.Прямоугольная") Тогда
	    Результат = РеквизитыТрубы.ДлинаТруба * РеквизитыТрубы.ШиринаТруба;
	Иначе
		Результат = 0;
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ПлощадьСеченияТрубы()

#КонецОбласти