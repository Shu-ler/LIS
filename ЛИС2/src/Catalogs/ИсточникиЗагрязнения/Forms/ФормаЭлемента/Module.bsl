
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	//ИспользоватьПодсистемуРасчетныеМетодики = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетныеМетодики");
	ИспользоватьПодсистемуРасчетныеМетодики = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НормативыИЗА, "ИсточникЗагрязнения", Объект.Ссылка, ВидСравненияКомпоновкиДанных.Равно);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НормативыИЗА, "ДатаОкончанияДействияНорматива", ТекущаяДатаСеанса(), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НормативыИЗА, "Период", ТекущаяДатаСеанса(), ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
	КонецЕсли;
	
	Если ЭтаФорма.Параметры.Свойство("Родитель") Тогда
	
		Объект.Родитель = ЭтаФорма.Параметры.Родитель;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		Заголовок = "Источник выделения";
		ЗаполнитьЗначенияСвойств(Объект, Объект.Родитель,"НомерИЗА, ПроизводственнаяПлощадка, ЦехУчасток,ТипИсточника");
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Модифицированность = Ложь;
		КонецЕсли;
	Иначе
		Заголовок = "Источник загрязнения";
	КонецЕсли;
	
	ОрганизованныйИсточник = Перечисления.ТипыИсточниковВыбросов.Организованный;
	НеорганизованныйИсточник = Перечисления.ТипыИсточниковВыбросов.Неорганизованный;
	ВидИВПрочее = Справочники.ВидыИВ.Прочее;
	ВидТрубыКруглая = Перечисления.ВидыТрубыИЗА.Круглая;
	ВидТрубыПрямоугольная = Перечисления.ВидыТрубыИЗА.Прямоугольная;
	
	Если НЕ Параметры.Ключ.Пустая() Тогда
		ВидИВОбъекта = Объект.ВидИВ;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
		
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда 
		БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
		ЭтотОбъект.ТолькоПросмотр = Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Объект.Ссылка );
	КонецЕсли;
	
	Если ЗначениеЗаполнено( Параметры.ЗначениеКопирования ) И 
		Не ЗначениеЗаполнено( Параметры.ЗначениеКопирования.Родитель ) Тогда // Копирование источника выделения	
		масПодчиненныеЭлементы = Справочники.ИсточникиЗагрязнения.НайтиПодчиненныеЭлементы( Параметры.ЗначениеКопирования );
		Если масПодчиненныеЭлементы.Количество() > 0 Тогда 
			Параметры.КлючНазначенияИспользования = ПоместитьВоВременноеХранилище( масПодчиненныеЭлементы, УникальныйИдентификатор );
		КонецЕсли;
		
		Объект.НомерИЗА = ПолучитьСледующийНомерИЗА( Объект.ПроизводственнаяПлощадка );
		
		Попытка
			Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю( ОписаниеОшибки() );
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры // Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

&НаСервере
Процедура ПередЗаписьюНаСервере( Отказ, ТекущийОбъект, ПараметрыЗаписи )
	
	Если ЗначениеЗаполнено(Объект.Родитель) И НЕ ПроверитьНаличиеИВУИЗА(Объект.Родитель) Тогда
	
		ОбновитьПометкуУдаленияУИЗА(Ложь);
	
	КонецЕсли;
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда 
		Обработки.СозданиеНСИ.ПроверитьЗаполнениеРеквизитов( ЭтотОбъект, Отказ );
	КонецЕсли;
	
КонецПроцедуры // Процедура ПередЗаписьюНаСервере( Отказ, ТекущийОбъект, ПараметрыЗаписи )

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ВидИВОбъекта", ВидИВОбъекта);
	
КонецПроцедуры // Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

&НаСервере
Процедура ПослеЗаписиНаСервере( ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	ПослеЗаписиОбъектаБизнесПроцессаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Родитель) И НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ПроверитьНаличиеИВУИЗА(Объект.Родитель) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если НЕ КонтрольЗакрытияФормыПриСозданииИВ Тогда
			
			Отказ = Истина;
			
			ОповещениеПоПометкеНаУдаление = Новый ОписаниеОповещения( "ПослеОтменыСозданияНовогоИВ", ЭтотОбъект);
			ПоказатьВопрос(ОповещениеПоПометкеНаУдаление, "Вы уверены что хотите прервать создание ""Источника выделения""? Вышестоящий ""Источник загрязнения"" будет помечен на удаление. Прервать создание?", РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Работа с бизнес-процессами
	Если Не ЗакрыватьБезусловно И ЗадачаИсполнителяНеЗавершенаНаСервере() Тогда 
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗакрытиеФормы", ЭтотОбъект );	
		ПоказатьВопрос( текОповещение, "Отправить на согласование источник загрязнения / выделения '" + Объект.Ссылка + "'?", РежимДиалогаВопрос.ДаНет );

		Отказ				= Истина;
		ЗакрыватьБезусловно = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипИсточникаПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаличиеВентилятораПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ЦехУчастокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.ПроизводственнаяПлощадка) Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Поле ""Производственная площадка"" не заполнено", , "Объект.ПроизводственнаяПлощадка", ,);
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ВидТрубыПриИзменении(Элемент)
	УправлениеВидимостью(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВидИВПриИзменении(Элемент)
	
	ОчиститьРеквизитыВидаИсточника();
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура ВремяРаботыПриИзменении(Элемент)
	
	Если Объект.КоличествоИВ < 2 И Объект.ВремяРаботы > 24 Тогда
	
		Объект.ВремяРаботы = 24;
	
	КонецЕсли;
	
КонецПроцедуры // Процедура ВремяРаботыПриИзменении(Элемент)

&НаКлиенте
Процедура ВремяРаботыГодПриИзменении(Элемент)
	
	Если Объект.КоличествоИВ < 2 И Объект.ВремяРаботыГод > 8784 Тогда
	
		Объект.ВремяРаботыГод = 8784;
	
	КонецЕсли;
	
КонецПроцедуры // Процедура ВремяРаботыГодПриИзменении(Элемент)

&НаКлиенте
Процедура КоличествоИВПриИзменении(Элемент)
	
	Если Объект.КоличествоИВ < 2 И Объект.ВремяРаботыГод > 8784 Тогда
	
		Объект.ВремяРаботыГод = 8784;
	
	КонецЕсли;
	
	Если Объект.КоличествоИВ < 2 И Объект.ВремяРаботы > 24 Тогда
	
		Объект.ВремяРаботы = 24;
	
	КонецЕсли;
	
КонецПроцедуры // Процедура КоличествоИВПриИзменении(Элемент)

//&НаКлиенте
//Процедура ПараметрГВСОбъемПриИзменении(Элемент)
//	
//	//Если Объект.ВидТрубы = ВидТрубыКруглая Тогда 
//	//	Объект.ПараметрГВССкорость = Объект.ПараметрГВСОбъем / (3.1415 * Объект.Диаметр / 4);
//	//ИначеЕсли Объект.ВидТрубы = ВидТрубыПрямоугольная Тогда
//	//	Объект.ПараметрГВССкорость = Объект.ПараметрГВСОбъем / (Объект.ДлинаТруба * Объект.ШиринаТруба);
//	//КонецЕсли;
//	//
//	//Сообщить("Пересчет значения ""Скорость, м/с"" произведен по формуле ""Скорость = Объем / Площадь устья""");
//	
//КонецПроцедуры

&НаКлиенте
Процедура ГПУНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для установки ГПУ необходимо сначала записать текущий ИЗА");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеОтменыСозданияНовогоИВ(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		КонтрольЗакрытияФормыПриСозданииИВ = Истина;
		ЭтотОбъект.Закрыть();
		
		ОбновитьПометкуУдаленияУИЗА(Истина);
		
		Оповестить( "ОбновитьСписок", Объект.Родитель, ЭтаФорма );
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПометкуУдаленияУИЗА (Пометка)
	
	ИЗА = Объект.Родитель.ПолучитьОбъект();
	ИЗА.ПометкаУдаления = Пометка;
	ИЗА.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНаУдалениеВСлучаеОтказаПродложить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СтруктураПараметров = Новый Структура("Родитель", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.ИсточникиЗагрязнения.ФормаОбъекта", СтруктураПараметров, ЭтаФорма);
		
	Иначе
		
		НаличиеИВУИЗА = ПроверитьНаличиеИВУИЗА(Объект.Ссылка);
		
		Объект.ПометкаУдаления = Истина;
		ЭтотОбъект.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНаличиеИВУИЗА(Ссылка)
	
	ПризнакНаличия = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсточникиЗагрязнения.Ссылка			 КАК Ссылка
		|ИЗ
		|	Справочник.ИсточникиЗагрязнения КАК ИсточникиЗагрязнения
		|ГДЕ
		|	ИсточникиЗагрязнения.Родитель = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() <> 0 Тогда
	
		ПризнакНаличия = Истина;
	
	КонецЕсли;
	
	Возврат ПризнакНаличия;
	
КонецФункции // Функция ПроверитьНаличиеИВУИЗА(Ссылка)

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если НЕ ЗначениеЗаполнено(Объект.Родитель) И НЕ Объект.ПометкаУдаления И НЕ ПроверитьНаличиеИВУИЗА(Объект.Ссылка) Тогда
		
		ОповещениеПоПометкеНаУдаление = Новый ОписаниеОповещения( "ПометкаНаУдалениеВСлучаеОтказаПродложить", ЭтотОбъект);
		ПоказатьВопрос(ОповещениеПоПометкеНаУдаление, "Для данного ""Источника загрязнения"" необходимо создать ""Источник выделения"" или ""Источник загрязнения"" будет помечен на удаление. Создать сейчас?", РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьРеквизитыВидаИсточника()
	
	Если Объект.ВидИВ <> ПредопределенноеЗначение("Справочник.ВидыИВ.СвечаМаслобака") И 
		Объект.ВидИВ <> ПредопределенноеЗначение("Справочник.ВидыИВ.ГазоперекачивающийАгрегат") И
		Объект.ВидИВ <> ПредопределенноеЗначение("Справочник.ВидыИВ.ТрубчатаяПечь") Тогда	
		
		//Объект.ТипГПА 					  = ПредопределенноеЗначение("Справочник.ТипыГПА.ПустаяСсылка");
//		Объект.КритерийТрансформацииАзота = ПредопределенноеЗначение("Справочник.КритерииРегиональныхКоэффициентовТрансформацииАзота.ПустаяСсылка");
		
	КонецЕсли; // Если Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ТрубчатаяПечь") Тогда	
	
КонецПроцедуры //Процедура ОчиститьРеквизитыВидаИсточника() 	

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	ЭлементыФормы = Форма.Элементы;
	Объект = Форма.Объект;
	ЭтоИВ = ЗначениеЗаполнено(Объект.Родитель);
	
	ЭлементыФормы.НомерИЗА.Видимость = НЕ ЭтоИВ;
	ЭлементыФормы.ГруппаОсновныеСведенияИЗА.Видимость = НЕ ЭтоИВ;
	ЭлементыФормы.ГруппаНормативыВыбросовПоИЗА.Видимость = (НЕ ЭтоИВ И ЗначениеЗаполнено(Объект.Ссылка));
	ЭлементыФормы.Наименование.Заголовок = ?(ЭтоИВ, "Наименование источника выделения", "Наименование источника загрязнения");
	ЭлементыФормы.ПризнакОсобоОхраняемойТерритории.Видимость = НЕ ЭтоИВ и ЗначениеЗаполнено(Объект.ПроизводственнаяПлощадка) и
	                                                                      не ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.ПроизводственнаяПлощадка, "ПризнакОсобоОхраняемойТерритории");
		
	ЭлементыФормы.ГруппаОсновныеСведенияИВ.Видимость = ЭтоИВ;	
	ЭлементыФормы.РодительНомерИЗА.Видимость = ЭтоИВ;
	ЭлементыФормы.НомерИсточникВыделения.Видимость = ЭтоИВ;
	ЭлементыФормы.КоличествоИВ.Видимость = ЭтоИВ;
	ЭлементыФормы.МетанПоУчетуДУ.Видимость = ЭтоИВ;
	ЭлементыФормы.ОсновнойИсточникВыделения.Видимость = ЭтоИВ;
	
	
	Если НЕ ЭтоИВ Тогда
		ЭлементыФормы.МаркаВентилятора.Видимость = Объект.НаличиеВентилятора;
		ЭлементыФормы.ПроизводительностьВентилятора.Видимость = Объект.НаличиеВентилятора;
		ЭлементыФормы.ГруппаСведенияПоОрганизованномуИсточнику.Видимость = (Объект.ТипИсточника = Форма.ОрганизованныйИсточник);	
		ЭлементыФормы.ГруппаСведенияПоНеорганизованномуИсточнику.Видимость = (Объект.ТипИсточника = Форма.НеорганизованныйИсточник);
		Если ЭлементыФормы.ГруппаСведенияПоОрганизованномуИсточнику.Видимость Тогда
			ЭлементыФормы.Диаметр.Видимость = (Объект.ВидТрубы = Форма.ВидТрубыКруглая);
			ЭлементыФормы.ДлинаТруба.Видимость = (Объект.ВидТрубы = Форма.ВидТрубыПрямоугольная);
			ЭлементыФормы.ШиринаТруба.Видимость = (Объект.ВидТрубы = Форма.ВидТрубыПрямоугольная);
		КонецЕсли;
		
		//Изменения замечание 2654
		ЭлементыФормы.КоординатыX2.Видимость = (Объект.ТипИсточника = Форма.НеорганизованныйИсточник);
		ЭлементыФормы.КоординатыY2.Видимость = (Объект.ТипИсточника = Форма.НеорганизованныйИсточник);

	КонецЕсли;

	//УстановитьВидимостьРеквизитовСведенийОИсточнике(Объект.ВидИВ, ЭлементыФормы.СведенияОИсточнике, Форма.ИспользоватьПодсистемуРасчетныеМетодики);	//, ЭлементыФормы.КритерийТрансформацииАзота, ЭлементыФормы.ТипГПА
	
	Если Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ФакельнаяУстановкаПоСжиганиюПНГ") И ВключенУчетПНГ() Тогда
		ЭлементыФормы.ОборудованПриборомУчета.Видимость = Истина;
	Иначе 
		ЭлементыФормы.ОборудованПриборомУчета.Видимость = Ложь;
	КонецЕсли;
	
		

КонецПроцедуры

&НаСервереБезКонтекста
Функция ВключенУчетПНГ()
	
	Возврат Константы.УчетПНГ.Получить();
		
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьРеквизитовСведенийОИсточнике( ВидИВ, ЭлементыФормыСведенияОИсточнике, ИспользоватьПодсистемуРасчетныеМетодики )	//, ЭлементыФормыКритерийТрансформацииАзота, ЭлементыФормыТипГПА
	
	ЭлементыФормыСведенияОИсточнике.Видимость = Ложь;
	
	Если ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.СвечаМаслобака") Или
		 ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Турбодетандер") Или
		 ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ДегазаторГПА") Или
		 ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.КонтурНагнетателя") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о свечах ГПА";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ТрубчатаяПечь") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о трубчатой печи";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ГазоперекачивающийАгрегат") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о ГПА";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Котельная") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о котельной";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.НефтегазовоеОборудование") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о нефтегазовом оборудовании";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.РезервуарыСМетанолом") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о резервуарах";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.РезервуарыСНефтепродуктами") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о резервуарах";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПродувкаПылеуловителейГРС") 
		  ИЛИ ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ОсвидетельствованиеПылеуловителейГРС") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о пылеуловителях ГРС";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ЗРАГРС") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о запорно-регулирующей арматуре ГРС";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ЛинииРедуцированияИЗамеровГРС") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о линиях редуцирования и замеров ГРС";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПредохранительныеКлапаныГРС") или
			  ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПредохранительныеКлапаныАГНКС") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о предохранительных клапанах";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ОбвязкаГРС") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об обвязках технологического оборудования ГРС";
		
	// {EXTCODE 10.10.2017 Ушаков А.Е.
	//ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ДизельнаяУстановка" ) Или 
	//			  ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазопоршневаяЭлектростанцияЭСН" ) Тогда 
	//		
	//	ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
	//	ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о дизельных установках / электростанциях";
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ДизельнаяУстановка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о дизельной установке";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазопоршневаяЭлектростанцияЭСН" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об электростанции";	
	// }EXTCODE 10.10.2017 Ушаков А.Е.	
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Скважина" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о скважине";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Трубопровод" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о трубопроводе";

		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТехнологическоеОборудование" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о технологическом оборудовании";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ФакельнаяУстановка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о факельной установке";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Сварка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о сварке";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Автостоянка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об автостоянке";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Аккумуляторная" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об аккумуляторной";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.БазаДорожнойТехники" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о базе дорожной техники";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МойкаДеталей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о мойке деталей";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбкаткаДвигателей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об обкатке двигателей";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТопливнаяАппаратура" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о топливной аппаратуре";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПолигонТБО" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о полигоне ТБО";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МойкаАвтомобилей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о мойке автомобилей";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.КонтрольГазовАвтомобилей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о контроле газов автомобилей";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ШиноремонтныеРаботы" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о ремонте резинотехнических изделий и шиномонтажных работах";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МедницкиеРаботы" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о медницких работах";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.АвтотранспортныеРаботыВКарьере" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об автотранспортных работах в карьере";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.БуровыеРаботыВКарьере" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о буровых работах в карьере";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ВзрывныеРаботыВКарьере" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о взрывных работах в карьере";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.УстановкаТермическойПереработкиТБО" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об установке термической переработки ТБО";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.КомпрессорнаяСтанция" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о компрессорной станции";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПереливОрганическихРастворителей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о переливе органических растворителей";

	// (++) Зиновьев А.В., 28.06.2016, 159388760
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Дезбарьер" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о дезбарьерах";
	// (--) Зиновьев А.В., 28.06.2016, 159388760
	
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбщеобменнаяВентиляция" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об общеобменной вентиляции";

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбщезаводскаяЛаборатория" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об общезаводской лаборатории"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Хлебопекарня" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о хлебопекарни"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Деревообработка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о деревообработке"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ЖелезнодорожноеДепо" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о железнодорожном депо"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Металлообработка" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о металлообработке"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Лакокраска" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о лакокраске"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СтанцияАэрацииСточныхВод" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о станции аэрации сточных вод"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СвечаРазгрузкиГазозаправочныхКолонок" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о свече разгрузки газозаправочных колонок"; 

	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Химлаборатория" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о химлабораториях"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТранспортныеЦистерны" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о транспортных цистернах"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТехобслуживаниеИРемонтАвтомобилей" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о техобслуживании и ремонте автомобилей"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ФакельнаяУстановкаПоСжиганиюПНГ" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о факельной установке по сжиганию ПНГ"; 

	// (++) Зиновьев А.В., 28.11.2016
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.АЗС" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об АЗС";
	// (--) Зиновьев А.В., 28.11.2016 	
	
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазотурбиннаяЭлектростанцияЭСН" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о газотурбинной электростанции"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазоваяРезкаМеталлов" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = Истина;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о газовой резке металлов"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.УстановкаАсфальтобетонногоЗавода" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об установках асфальтобетонного завода"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПогрузочноРазгрузочныеРаботыАБЗ" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о погрузочно-разгрузочных работах АБЗ"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СкладированиеСтроительныхМатериалов" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о складировании строительных материалов"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Автоэстакада" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения об автоэстакаде"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Шлейф" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о шлейфе"; 
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Теплообменник" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о теплообменнике";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СепараторНефтегазовый" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о сепараторе нефтегазовом";
 
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.КузнечныеГорныНагревательныеПечи") Тогда // (++) Зиновьев А.В., 22.02.2017
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о кузнечных горнах/нагревательных печах";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Молоты" ) Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о молотах";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТермическаяОбработкаМеталлоизделий") Тогда 
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о термической обработке металлоизделий";	
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПроизводствоМеталлопокрытийГальваническимСпособом") Тогда // (++) Зиновьев А.В., 23.07.2017
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о производстве металлопокрытий гальваническим способом";
		
	ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПогрузочноРазгрузочныеРаботыВКарьере") Тогда
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о погрузочно-разгрузочных работах в карьере";
		
    ИначеЕсли ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТранспортныеРаботыВКарьере") Тогда
		
		ЭлементыФормыСведенияОИсточнике.Видимость 		  = ИспользоватьПодсистемуРасчетныеМетодики;
		ЭлементыФормыСведенияОИсточнике.Заголовок 		  = "Сведения о транспортных работах в карьере";
		
	КонецЕсли;	
	
КонецПроцедуры // Процедура УстановитьВидимостьГиперссылкиСведенийОИсточнике()	

&НаКлиенте
Процедура СведенияОИсточникеНажатие(Элемент)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли; // Если Объект.Ссылка.Пустая() Тогда 
	
	Если Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ТрубчатаяПечь") Тогда 
		
		// {EXTCODE 06.10.2017 Ушаков А.Е.
		//Было: 
		//ПараметрыФормы = Новый Структура;
		//ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОТрубчатыхПечах"));
		//// Моисеев Е.П. 21.09.2017 начало
		//// закомментировал:
		////ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникЗагрязнения", Объект.Ссылка));
		//// добавил:
		//ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения, ПроизводственнаяПлощадка, ВидИВ", Объект.Ссылка, Объект.ПроизводственнаяПлощадка, Объект.ВидИВ));
		//// Моисеев Е.П. 21.09.2017 конец
		//
		//ОткрытьФорму("РегистрСведений.СведенияОТрубчатыхПечах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		//Стало:
		стркПараметрыФормы = Новый Структура;
		стркПараметрыФормы.Вставить( "ИсточникВыделения",			 Объект.Ссылка );
		стркПараметрыФормы.Вставить( "РегистрНепериодическиеДанные", "СведенияОТрубчатыхПечах" );
		стркПараметрыФормы.Вставить( "РегистрПеременныеДанные",		 "ПеременныеДанныеОТрубчатыхПечах" );
		стркПараметрыФормы.Вставить( "ТолькоПросмотр",		 		 ТолькоПросмотр );
		
		ОткрытьФорму( "ОбщаяФорма.ФормаСведенийОбИсточникеВыделения", стркПараметрыФормы, ЭтаФорма, УникальныйИдентификатор );
		// }EXTCODE 06.10.2017 Ушаков А.Е.
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Котельная") Тогда 	
		
		// 28.07.17
		//ПараметрыФормы = Новый Структура;
		//
		//НастройкиКД = Новый НастройкиКомпоновкиДанных;
		//
		//ЭлОтбора = НастройкиКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//
		//ЭлОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ИсточникЗагрязнения");
		//ЭлОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
		//ЭлОтбора.ПравоеЗначение   = Объект.Ссылка;
		//ЭлОтбора.Использование    = Истина;
		//ЭлОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		//
		//ПараметрыФормы.Вставить("ФиксированныеНастройки", НастройкиКД);
		//ПараметрыФормы.Вставить("КлючНазначенияИспользования", "ОткрытьФормуСпискаСОтборомПоКотельной");
		//
		//ОткрытьФорму("РегистрСведений.КотлыИсточниковВыделения.ФормаСписка", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОКотельных"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОКотельных.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.РезервуарыСМетанолом") 
		  ИЛИ Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.РезервуарыСНефтепродуктами") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОРезервуарах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОРезервуарах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.НефтегазовоеОборудование") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.ПеременныеДанныеНефтегазовогоОборудования.Форма.Форма", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПродувкаПылеуловителейГРС") 
		  ИЛИ Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ОсвидетельствованиеПылеуловителейГРС") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПылеуловителях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПылеуловителях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ЗРАГРС") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.ПеременныеДанныеЗРАГРС.Форма.Форма", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ЛинииРедуцированияИЗамеровГРС") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОЛинияхРедуцированияИЗамеров"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОЛинияхРедуцированияИЗамеров.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПредохранительныеКлапаныГРС") или
		      Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПредохранительныеКлапаныАГНКС") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПредохранительныхКлапанах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПредохранительныхКлапанах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ОбвязкаГРС") Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбОбвязкахГРС"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбОбвязкахГРС.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.СвечаМаслобака") Или
			  Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ДегазаторГПА") Или
			  Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Турбодетандер") Или
			  Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.КонтурНагнетателя") Тогда
			  //Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ГазоперекачивающийАгрегат") Тогда // 24.08.17 
		                 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОГПА"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникЗагрязнения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОГПА.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ГазоперекачивающийАгрегат") Тогда 	
				
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСтанцияхГПАВыхлопныеТрубы"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОСтанцияхГПАВыхлопныеТрубы.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ДизельнаяУстановка" ) Или
			  Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазопоршневаяЭлектростанцияЭСН" ) Тогда 
			  
		стркПараметрыФормы = Новый Структура;
		стркПараметрыФормы.Вставить( "ИсточникВыделения",			Объект.Ссылка );
		стркПараметрыФормы.Вставить( "РегистрПериодическиеДанные",	"СведенияОДизельныхУстановкахЭСН" );
		стркПараметрыФормы.Вставить( "РегистрПеременныеДанные",		"ПеременныеДанныеПоДизельнымУстановкамЭСН" );
		стркПараметрыФормы.Вставить( "ТолькоПросмотр",		 		ТолькоПросмотр );

		ОткрытьФорму( "ОбщаяФорма.ФормаСведенийОбИсточникеВыделения", стркПараметрыФормы, ЭтаФорма, УникальныйИдентификатор );
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Скважина" ) Тогда 
		
		стркПараметрыФормы = Новый Структура;
		стркПараметрыФормы.Вставить( "ИсточникВыделения",			 Объект.Ссылка );
		стркПараметрыФормы.Вставить( "РегистрНепериодическиеДанные", "СведенияОСкважине" );
		стркПараметрыФормы.Вставить( "РегистрПеременныеДанные",		 "ПеременныеДанныеОСкважине" );
		стркПараметрыФормы.Вставить( "ТолькоПросмотр",		 		 ТолькоПросмотр );

		ОткрытьФорму( "ОбщаяФорма.ФормаСведенийОбИсточникеВыделения", стркПараметрыФормы, ЭтаФорма, УникальныйИдентификатор );
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Трубопровод" ) Или 
			  Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТехнологическоеОборудование" ) Тогда 
			  
		стркПараметрыФормы = Новый Структура;
		стркПараметрыФормы.Вставить( "ИсточникВыделения",			 Объект.Ссылка );
		стркПараметрыФормы.Вставить( "РегистрНепериодическиеДанные", "СведенияОТрубопроводеТО" );
		стркПараметрыФормы.Вставить( "РегистрПеременныеДанные",		 "ПеременныеДанныеОТрубопроводеТО" );
		стркПараметрыФормы.Вставить( "ТолькоПросмотр",		 		 ТолькоПросмотр );

		ОткрытьФорму( "ОбщаяФорма.ФормаСведенийОбИсточникеВыделения", стркПараметрыФормы, ЭтаФорма, УникальныйИдентификатор );
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ФакельнаяУстановка" ) Тогда 
		
		стркПараметрыФормы = Новый Структура;
		стркПараметрыФормы.Вставить( "ИсточникВыделения",			 Объект.Ссылка );
		стркПараметрыФормы.Вставить( "РегистрНепериодическиеДанные", "СведенияОФакельныхУстановках" );
		стркПараметрыФормы.Вставить( "РегистрПеременныеДанные",		 "ПеременныеДанныеОФакельныхУстановках" );
		стркПараметрыФормы.Вставить( "ТолькоПросмотр",		 		 ТолькоПросмотр );

		ОткрытьФорму( "ОбщаяФорма.ФормаСведенийОбИсточникеВыделения", стркПараметрыФормы, ЭтаФорма, УникальныйИдентификатор );
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Сварка" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСварке"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОСварке.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Автостоянка" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбАвтостоянках"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбАвтостоянках.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Аккумуляторная" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбАккумуляторных"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбАккумуляторных.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.БазаДорожнойТехники" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОБазахДорожнойТехники"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОБазахДорожнойТехники.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МойкаДеталей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОМойкеДеталей"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОМойкеДеталей.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбкаткаДвигателей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбОбкаткеДвигателей"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбОбкаткеДвигателей.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТопливнаяАппаратура" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОТопливнойАппаратуре"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОТопливнойАппаратуре.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПолигонТБО" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПолигонахТБО"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПолигонахТБО.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МойкаАвтомобилей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОМойкахАвтомобилей"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОМойкахАвтомобилей.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.КонтрольГазовАвтомобилей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОКонтролеГазовАвтомобилей"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОКонтролеГазовАвтомобилей.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ШиноремонтныеРаботы" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОШиноремонтныхРаботах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОШиноремонтныхРаботах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.МедницкиеРаботы" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		// ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОМедницкихРаботах")); //(++) Зиновьев А.В., 23.10.2016
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОМедницкихРаботах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.АвтотранспортныеРаботыВКарьере" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбАвтотранспортныхРаботахВКарьерах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбАвтотранспортныхРаботахВКарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.БуровыеРаботыВКарьере" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОБуровыхРаботахВКарьерах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОБуровыхРаботахВКарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ВзрывныеРаботыВКарьере" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОВзрывныхРаботахВКарьерах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОВзрывныхРаботахВКарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);		
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.УстановкаТермическойПереработкиТБО" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбУстановкахТермическойПереработкиТБО"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбУстановкахТермическойПереработкиТБО.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);	
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.КомпрессорнаяСтанция" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОКомпрессорныхСтанциях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОКомпрессорныхСтанциях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);	
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПереливОрганическихРастворителей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПереливахОрганическихРастворителей"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПереливахОрганическихРастворителей.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);					
		
	// (++) Зиновьев А.В., 28.06.2016, 159388760	
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Дезбарьер") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));

		ОткрытьФорму("РегистрСведений.СведенияОДезбарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	// (--) Зиновьев А.В., 28.06.2016, 159388760		
	
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбщеобменнаяВентиляция" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбОбщеобменныхВентиляциях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбОбщеобменныхВентиляциях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);	
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ЖелезнодорожноеДепо" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОЖелезнодорожныхДепо"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОЖелезнодорожныхДепо.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Лакокраска" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОЛакокраске"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОЛакокраске.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Металлообработка" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОМеталлообработке"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОМеталлообработке.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Хлебопекарня" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОХлебопекарнях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОХлебопекарнях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СвечаРазгрузкиГазозаправочныхКолонок" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСвечахРазгрузкиГазозаправочныхКолонок"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОСвечахРазгрузкиГазозаправочныхКолонок.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СтанцияАэрацииСточныхВод" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСтанцияхАэрацииСточныхВод"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		ОткрытьФорму("РегистрСведений.СведенияОСтанцияхАэрацииСточныхВод.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ОбщезаводскаяЛаборатория" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбОбщезаводскихЛабораториях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбОбщезаводскихЛабораториях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Деревообработка" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОДеревообработке"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОДеревообработке.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Химлаборатория" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОХимлабораториях.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТранспортныеЦистерны" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОНаливеТранспортныхЦистерн.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТехобслуживаниеИРемонтАвтомобилей" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОТОИТРАвтомобилей.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ФакельнаяУстановкаПоСжиганиюПНГ" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОФакельныхУстановкахПоСжиганиюПНГ"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОФакельныхУстановкахПоСжиганиюПНГ.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.АЗС") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбАЗС.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);	
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазотурбиннаяЭлектростанцияЭСН" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОГазотурбинныхЭлектростанциях"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОГазотурбинныхЭлектростанциях.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ГазоваяРезкаМеталлов" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОГазовойРезкеМеталлов"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОГазовойРезкеМеталлов.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.УстановкаАсфальтобетонногоЗавода" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		//ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбУстановкахАсфальтобетонныхЗаводов"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбУстановкахАсфальтобетонныхЗаводов.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПогрузочноРазгрузочныеРаботыАБЗ" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		//ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПогрузочноРазгрузочныхРаботахАБЗ"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПогрузочноРазгрузочныхРаботахАБЗ.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СкладированиеСтроительныхМатериалов" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСкладированииСтроительныхМатериалов"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОСкладированииСтроительныхМатериалов.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Автоэстакада" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОбАвтоэстакадах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОбАвтоэстакадах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Шлейф" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОШлейфах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОШлейфах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.Теплообменник" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОТеплообменниках"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОТеплообменниках.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.СепараторНефтегазовый" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОСепараторахНефтегазовых"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОСепараторахНефтегазовых.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	
	// (++) Зиновьев А.В., 22.02.2017 
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.КузнечныеГорныНагревательныеПечи") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОКузнечныхГорнахИНагревательныхПечах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОКузнечныхГорнахИНагревательныхПечах.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.Молоты") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОМолотах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОМолотах.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ТермическаяОбработкаМеталлоизделий") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОТермическойОбработкеМеталлоизделий"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОТермическойОбработкеМеталлоизделий.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
	// (--) Зиновьев А.В., 22.02.2017
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение("Справочник.ВидыИВ.ПроизводствоМеталлопокрытийГальваническимСпособом") Тогда // (++) Зиновьев А.В., 23.07.2017																													
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПроизводствеМеталлопокрытийГальваническимСпособом"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПроизводствеМеталлопокрытийГальваническимСпособом.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ПогрузочноРазгрузочныеРаботыВКарьере" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОПогрузочноРазгрузочныхРаботахВКарьерах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОПогрузочноРазгрузочныхРаботахВКарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);
		
	ИначеЕсли Объект.ВидИВ = ПредопределенноеЗначение( "Справочник.ВидыИВ.ТранспортныеРаботыВКарьере" ) Тогда 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ПолучитьКлючЗаписиРССведенияОбИсточнике(Объект.Ссылка, "СведенияОТранспортныхРаботахВКарьерах"));
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ИсточникВыделения", Объект.Ссылка));
		
		ОткрытьФорму("РегистрСведений.СведенияОТранспортныхРаботахВКарьерах.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма, Новый УникальныйИдентификатор);

	
	КонецЕсли;               
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиРССведенияОбИсточнике(ИсточникЗагрязнения, ИмяРегистраСведений)
	
	Если Не ЗначениеЗаполнено(ИсточникЗагрязнения) Тогда 
		Возврат РегистрыСведений[ИмяРегистраСведений].ПустойКлюч();		
	КонецЕсли;
	
	// Моисеев Е.П. 25.09.2017 начало. Почему-то у некоторых регистров необходимое измерение называется иначе. Пришлось это учесть уже здесь.
	Если ИмяРегистраСведений = "СведенияОГПА"  Тогда
	    ИмяИзмеренияИсточникЗагрязнения = "ИсточникЗагрязнения"; 
	Иначе
		ИмяИзмеренияИсточникЗагрязнения = "ИсточникВыделения";
	КонецЕсли;
	// Моисеев Е.П. 25.09.2017 конец
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТекущийРегистрСведений." + ИмяИзмеренияИсточникЗагрязнения + " КАК ИсточникЗагрязнения
		|ИЗ
		|	РегистрСведений." + ИмяРегистраСведений + " КАК ТекущийРегистрСведений
		|ГДЕ
		|	ТекущийРегистрСведений." + ИмяИзмеренияИсточникЗагрязнения + " = &ИсточникЗагрязнения";
		
	Запрос.УстановитьПараметр("ИсточникЗагрязнения", ИсточникЗагрязнения);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда 
		Если ИмяРегистраСведений = "СведенияОГПА"  Тогда // Моисеев Е.П. 25.09.2017 начало. Почему-то у некоторых регистров необходимое измерение называется иначе. Пришлось это учесть уже здесь.
			ДанныеКлюча = Новый Структура("ИсточникЗагрязнения", ИсточникЗагрязнения);
		Иначе
			ДанныеКлюча = Новый Структура("ИсточникВыделения", ИсточникЗагрязнения); 	
		КонецЕсли;
		КлючЗаписи = РегистрыСведений[ИмяРегистраСведений].СоздатьКлючЗаписи(ДанныеКлюча);
	Иначе	
		КлючЗаписи = РегистрыСведений[ИмяРегистраСведений].ПустойКлюч();
	КонецЕсли;  	
	
	Возврат КлючЗаписи;
	
КонецФункции

&НаКлиенте
Процедура НомерИЗАПриИзменении(Элемент)
	
	Если Найти("012345", Лев(Объект.НомерИЗА, 1)) > 0 Тогда
		Объект.ТипИсточника = ОрганизованныйИсточник;
	ИначеЕсли Найти("6789", Лев(Объект.НомерИЗА, 1)) > 0 Тогда
		Объект.ТипИсточника = НеорганизованныйИсточник;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии( Отказ )

	Если ЭтоАдресВременногоХранилища( Параметры.КлючНазначенияИспользования ) Тогда
		масИсточникиВыделения = ПолучитьИзВременногоХранилища( Параметры.КлючНазначенияИспользования );
		Если ТипЗнч( масИсточникиВыделения ) = Тип( "Массив" ) Тогда	// Копирование источника выделения
			Отказ		  = Истина;
			текОповещение = Новый ОписаниеОповещения( "СкопироватьИсточникиВыделения", ЭтотОбъект, масИсточникиВыделения );
			ПоказатьВопрос( текОповещение, "Скопировать подчиненные источники выделения?", РежимДиалогаВопрос.ДаНет, , 
							КодВозвратаДиалога.Нет );
			Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СкопироватьИсточникиВыделения( Знач Результат, Знач ПараметрКоманды ) Экспорт

	СкопироватьИсточникиНаСервере( ПараметрКоманды, Результат = КодВозвратаДиалога.Да );
	
	Оповестить( "ОбновитьСписок", Объект.Ссылка, ЭтаФорма );
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьИсточникиНаСервере( фпСписокЭлементов, фпКопироватьИсточникиВыделения )

	Если фпКопироватьИсточникиВыделения Тогда
		Для Каждого текЭлемент Из фпСписокЭлементов Цикл 		
			текНовыйЭлемент 						= текЭлемент.Скопировать();
			текНовыйЭлемент.Родитель				= Объект.Ссылка;
			текНовыйЭлемент.НомерИсточникаВыделения = "";
			текНовыйЭлемент.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСледующийНомерИЗА( фпПроизводственнаяПлощадка )

	текЗапрос	= Новый Запрос( "ВЫБРАТЬ
								|	ИсточникиЗагрязнения.НомерИЗА КАК НомерИЗА,
								|	0							  КАК НомерИЗАЧисло
								|ИЗ
								|	Справочник.ИсточникиЗагрязнения КАК ИсточникиЗагрязнения
								|ГДЕ
								|	ИсточникиЗагрязнения.Родитель = ЗНАЧЕНИЕ(Справочник.ИсточникиЗагрязнения.ПустаяСсылка) И 
								|	ИсточникиЗагрязнения.ПроизводственнаяПлощадка = &ПроизводственнаяПлощадка" );
								
	текЗапрос.УстановитьПараметр( "ПроизводственнаяПлощадка", фпПроизводственнаяПлощадка );
	
	тзНомераИЗА = текЗапрос.Выполнить().Выгрузить();
	
	Для Каждого текСтрока Из тзНомераИЗА Цикл 
		Попытка
			текСтрока.НомерИЗАЧисло = Число( текСтрока.НомерИЗА );
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	тзНомераИЗА.Сортировать( "НомерИЗАЧисло УБЫВ" );
	
	Возврат ?( тзНомераИЗА.Количество() = 0, "1", ДобавитьЛидирующиеНулиКНомеруИЗА( Формат( тзНомераИЗА[0].НомерИЗАЧисло + 1, "ЧГ=" ) ) );
	
КонецФункции	

&НаСервереБезКонтекста
Функция ДобавитьЛидирующиеНулиКНомеруИЗА( фпНомерИЗА )
	
	стрНомерИЗА			= фпНомерИЗА;
	текРеквизитНомерИЗА = Метаданные.Справочники.ИсточникиЗагрязнения.Реквизиты.Найти( "НомерИЗА" );
	Если текРеквизитНомерИЗА <> Неопределено И
		 Метаданные.Справочники.ИсточникиЗагрязнения.Реквизиты.Найти( "НомерИЗА" ).Тип.Типы()[0] = Тип( "Строка" ) Тогда
		 
		текДлинаРеквизита = текРеквизитНомерИЗА.Тип.КвалификаторыСтроки.Длина;
		Для сч = 1 По текДлинаРеквизита - СтрДлина( стрНомерИЗА ) Цикл 
			стрНомерИЗА = "0" + стрНомерИЗА;
		КонецЦикла;
	КонецЕсли;

	Возврат стрНомерИЗА;

КонецФункции	

#КонецОбласти

// Работа с бизнес-процессами
#Область ФункцииБизнесПроцессов

&НаКлиенте
Процедура ВыполнитьЗадачу( Команда ) Экспорт
	
	Если Модифицированность Тогда
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗаписи", ЭтотОбъект, Команда );	
		ПоказатьВопрос( текОповещение, "Для выполнения операции объект должен быть записан. Записать?", РежимДиалогаВопрос.ДаНет );		
	Иначе
		стрКомментарий = "";
		
		текОповещение  = Новый ОписаниеОповещения( "ПослеВводаКомментария", ЭтотОбъект );	
		
		ПоказатьВводСтроки( текОповещение, стрКомментарий, "Введите комментарий выполненой задачи" );
		
		ЗавершитьЗадачуНаСервере( Команда.Имя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписи( Результат, Команда ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Записать();
		ВыполнитьЗадачу( Команда );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытиеФормы( Результат, ДополнительныеПараметры ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		текКомандаВыполнения = ПолучитьКомандуВыполнения();
		Если текКомандаВыполнения <> Неопределено Тогда 
			ВыполнитьЗадачу( текКомандаВыполнения );
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКомментария( фпКомментарий, фпПараметры ) Экспорт
	
	Если Не ПустаяСтрока( фпКомментарий ) Тогда
		УстановитьКомментарийЗадачиНаСервере( ЭтотОбъект.БП_ВыполняемаяЗадача, фпКомментарий );	
	КонецЕсли;
	
	Если Открыта() Тогда 
		Закрыть();
	КонецЕсли;
	
	Оповестить( "БП_ВыполнениеЗадачи", Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура БП_ВыполнитьЗадачу( Команда )
	
	БП_ПоддержкаБизнесПроцессовКлиент.ВыполнитьЗадачу( ЭтотОбъект, Команда );
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомандуВыполнения()
	
	Для Каждого текКоманда Из Команды Цикл 	
		Если текКоманда.Действие = "БП_ВыполнитьЗадачу" Тогда 
			Возврат текКоманда;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗадачаИсполнителяНеЗавершенаНаСервере()
	
	Возврат ( Элементы.Найти( "БП_ВыполняемаяЗадача" ) <> Неопределено И
		 	  Не ЭтотОбъект.БП_ВыполняемаяЗадача.Выполнена И
		 	  ЭтотОбъект.БП_ВыполняемаяЗадача.ТочкаМаршрута.Порядок = 1 );
	
КонецФункции

&НаСервере
Процедура ЗапуститьБизнесПроцессСогласованияНаСервере()
	
	Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Объект.Ссылка );
	
	БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиОбъектаБизнесПроцессаНаСервере()
	
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда 
		ЗапуститьБизнесПроцессСогласованияНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьЗадачуНаСервере( фпИмяКоманды )

	текНомер  = Сред( фпИмяКоманды, 12 );
	текСтатус = ЭтаФорма["БП_Статус" + текНомер];
	
	БП_ПоддержкаБизнесПроцессовСервер.ЗавершитьЗадачу( ЭтотОбъект.БП_ВыполняемаяЗадача, ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, текСтатус );

	Обработки.СозданиеНСИ.УстановитьРеквизитыПоБизнесПроцессу( ЭтотОбъект.БП_ВыполняемаяЗадача, Объект.Ссылка );
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьКомментарийЗадачиНаСервере( фпЗадача, фпКомментарий )
	
	Обработки.СозданиеНСИ.УстановитьРеквизитКомментарий( фпЗадача, фпКомментарий );
	
КонецПроцедуры

&НаКлиенте
Процедура ПроизводственнаяПлощадкаПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

