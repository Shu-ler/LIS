
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
	
	ЗначениеЮридическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	ОКВЭД	= ПолучитьКлассификатор("ОКВЭД");
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Родитель") = Истина
		И Параметры.ЗначенияЗаполнения.Свойство("ОбособленноеПодразделение") = Истина
		И Параметры.ЗначенияЗаполнения.ОбособленноеПодразделение = Истина Тогда
		
		Объект.ИНН = Параметры.ЗначенияЗаполнения.Родитель.ИНН;
		Объект.ОбособленноеПодразделение = Истина;
	КонецЕсли;
	

	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	ИнтеграцияСВнешнимиСистемами.ЗаполнитьЗначенияВнешнихИдентификаторовНаФормеПриЧтенииНаСервере(Объект.Ссылка,ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ТекущийОбъект.НаименованиеОКОПФ = ТекущийОбъект.КодОКОПФ.Наименование;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаявлениеНаПодключениеОткрытьМастер(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьФормуМастераЗаявленияНаПодключение(Объект.Ссылка, ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)

	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.НаименованиеПолное) = Истина Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Поддержка контактной информации.

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	Подключаемый_ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
КонецПроцедуры

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецФункции
// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура КодОКВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьКодИзКлассификатора("ОКВЭД");

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодИзКлассификатора(ИмяКода, Комментарий = "")
 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипОбъекта",		"Справочник");
	ПараметрыФормы.Вставить("НазваниеОбъекта",	"Организации");
	ПараметрыФормы.Вставить("НазваниеМакета",	ИмяКода);
	ПараметрыФормы.Вставить("ТекущийПериод",	ТекущаяДата());
	ПараметрыФормы.Вставить("ТекущийКод",       Объект["Код" + ИмяКода]);
	ПараметрыФормы.Вставить("Комментарий",      Комментарий);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКода", ИмяКода);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыбратьКодИзКлассификатораЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Справочник.Организации.Форма.ФормаВыбораКода", ПараметрыФормы,,,,, ОповещениеОЗакрытии);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодИзКлассификатораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ИмяКода = ДополнительныеПараметры.ИмяКода;	
	
	ВыбранныйКод = РезультатЗакрытия;	
	
	Если ВыбранныйКод <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Объект["Код" + ИмяКода]				= ВыбранныйКод;
		Объект["Наименование" + ИмяКода]	= ЭтотОбъект[ИмяКода].Получить(ВыбранныйКод);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	ЮрФизЛицо = Форма.Объект.ЮридическоеФизическоеЛицо;
		
	Если Не ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементыФормы = Форма.Элементы;
	
	ПризнакЮридическогоЛица = ЮрФизЛицо = Форма.ЗначениеЮридическоеЛицо;
		
	ЭлементыФормы.КПП.Видимость 				= ПризнакЮридическогоЛица;
	ЭлементыФормы.КодОКОНХ.Видимость 			= ПризнакЮридическогоЛица;
	ЭлементыФормы.КодПоОКПО.Видимость 			= ПризнакЮридическогоЛица;
	ЭлементыФормы.ДатаРегистрации.Видимость 	= ПризнакЮридическогоЛица;
	
	Если ПризнакЮридическогоЛица Тогда
		ЭлементыФормы.ОГРН.Заголовок 				= "ОГРН";
	Иначе
		ЭлементыФормы.ОГРН.Заголовок 				= "ОГРНИП";
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С КЛАССИФИКАТОРАМИ

Функция ПолучитьКлассификатор(ИмяМакета) Экспорт

	Классификатор = Новый Соответствие();
	
	Макет = Справочники.Организации.ПолучитьМакет(ИмяМакета);
	
	ТекущаяОбласть = Макет.Область("Классификатор");

	Если ТекущаяОбласть <> Неопределено Тогда	
	
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебор строк макета.
			КодПоказателя = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название      = СокрП(Макет.Область(НомерСтр, 2).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				Классификатор.Вставить(КодПоказателя, Название);
			КонецЕсли;

		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Новый ФиксированноеСоответствие(Классификатор);

КонецФункции

#КонецОбласти
