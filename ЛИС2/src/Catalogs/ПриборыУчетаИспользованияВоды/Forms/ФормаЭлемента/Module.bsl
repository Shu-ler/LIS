
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// GalaktionovVA; Выделение подсистемы ЛИС - Старт
	//СтрокаДополнительно = ПолучитьДополнительныеДанные(); 
	// GalaktionovVA; Выделение подсистемы ЛИС - Финиш
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	    Если Параметры.Свойство("Владелец") Тогда
	        Объект.Владелец = Параметры.Владелец;
	    КонецЕсли;
		
		Если Параметры.Свойство("Организация") Тогда
	        Объект.Организация = Параметры.Организация;
	    КонецЕсли;
		
		// GalaktionovVA; Выделение подсистемы ЛИС - Старт
		//Если  СтрокаДополнительно <> Неопределено Тогда
		//	ДокументУчета = СтрокаДополнительно.Документ;
		//КонецЕсли;
		// GalaktionovVA; Выделение подсистемы ЛИС - Финиш
	КонецЕсли;
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
		ЭтотОбъект.ТолькоПросмотр = Не Обработки.СозданиеНСИ.ЭлементДоступенДляРедактирования( Объект.Ссылка );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Работа с бизнес-процессами
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		Обработки.СозданиеНСИ.ПроверитьЗаполнениеРеквизитов( ЭтотОбъект, Отказ );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере( ТекущийОбъект, ПараметрыЗаписи )
	
	// Работа с бизнес-процессами
	ПослеЗаписиОбъектаБизнесПроцессаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием( Отказ, СтандартнаяОбработка )
	
	// Работа с бизнес-процессами
	Если Не ЗакрыватьБезусловно И ЗадачаИсполнителяНеЗавершенаНаСервере() Тогда 
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗакрытиеФормы", ЭтотОбъект );	
		ПоказатьВопрос( текОповещение, "Отправить на согласование введенные данные о приборе учета использования воды '" + Объект.Ссылка + "'?", РежимДиалогаВопрос.ДаНет );

		Отказ				= Истина;
		ЗакрыватьБезусловно = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПоверкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПериодичностьПоверки) И ЗначениеЗаполнено(Объект.ДатаПоверки)   Тогда //И НЕ ЗначениеЗаполнено(Объект.ДатаСледующейПоверки)
		
		Объект.ДатаСледующейПоверки = ДобавитьМесяц(Объект.ДатаПоверки, ПолучитьКоличествоМесяцев(Объект.ПериодичностьПоверки));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоМесяцев(ПериодичностьПоверки)
		
	Возврат ПериодичностьПоверки.КоличествоМесяцев;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// GalaktionovVA; Выделение подсистемы ЛИС - Старт
//&НаСервере
//Функция ПолучитьДополнительныеДанные()
//	
//	Отбор = новый Структура;
//	Отбор.Вставить("ПриборУчета", Объект.Ссылка);
//	Выборка = РегистрыСведений.ПоказателиВодопотребленияСредствамиИзмерений.СрезПоследних(ТекущаяДата(),Отбор);
//	Если Выборка.Количество() > 0 Тогда
//		Возврат Выборка[0];	
//	Иначе
//		Выборка = РегистрыСведений.ПоказателиВодоотведенияСредствамиИзмерений.СрезПоследних(ТекущаяДата(),Отбор);
//		Если Выборка.Количество() > 0 Тогда
//			Возврат Выборка[0];	
//		Иначе
//			Возврат Неопределено;
//		КонецЕсли;	
//	КонецЕсли;	
//	
//КонецФункции
// GalaktionovVA; Выделение подсистемы ЛИС - Финиш

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	
	Если НЕ Тип("СправочникСсылка.Скважины") = ТипЗнч(Объект.Владелец) И НЕ Тип("СправочникСсылка.Организации") = ТипЗнч(Объект.Владелец) Тогда
		Объект.Организация = Объект.Владелец.Организация;
	ИначеЕсли Тип("СправочникСсылка.Скважины") = ТипЗнч(Объект.Владелец) Тогда
		Водозабор = Объект.Владелец.Владелец;
		Объект.Организация = Водозабор.Организация;
	ИначеЕсли Тип("СправочникСсылка.Организации") = ТипЗнч(Объект.Владелец) Тогда
		Объект.Организация = Объект.Владелец;
	КонецЕсли;	
		
КонецПроцедуры


#КонецОбласти

// Работа с бизнес-процессами
#Область ФункцииБизнесПроцессов

&НаКлиенте
Процедура ВыполнитьЗадачу( Команда ) Экспорт
	
	Если Модифицированность Тогда
		текОповещение = Новый ОписаниеОповещения( "ПослеЗакрытияВопросаЗаписи", ЭтотОбъект, Команда );	
		ПоказатьВопрос( текОповещение, "Для выполнения операции объект должен быть записан. Записать?", РежимДиалогаВопрос.ДаНет );		
	Иначе
		стрКомментарий = "";
		
		текОповещение  = Новый ОписаниеОповещения( "ПослеВводаКомментария", ЭтотОбъект );	
		
		ПоказатьВводСтроки( текОповещение, стрКомментарий, "Введите комментарий выполненной задачи" );
		
		ЗавершитьЗадачуНаСервере( Команда.Имя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаписи( Результат, Команда ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Записать();
		ВыполнитьЗадачу( Команда );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗакрытиеФормы( Результат, ДополнительныеПараметры ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		текКомандаВыполнения = ПолучитьКомандуВыполнения();
		Если текКомандаВыполнения <> Неопределено Тогда 
			ВыполнитьЗадачу( текКомандаВыполнения );
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаКомментария( фпКомментарий, фпПараметры ) Экспорт
	
	Если Не ПустаяСтрока( фпКомментарий ) Тогда
		УстановитьКомментарийЗадачиНаСервере( ЭтотОбъект.БП_ВыполняемаяЗадача, фпКомментарий );	
	КонецЕсли;
	
	Если Открыта() Тогда 
		Закрыть();
	КонецЕсли;
	
	Оповестить( "БП_ВыполнениеЗадачи", Объект.Ссылка );
	
КонецПроцедуры

&НаКлиенте
Процедура БП_ВыполнитьЗадачу( Команда )
	
	БП_ПоддержкаБизнесПроцессовКлиент.ВыполнитьЗадачу( ЭтотОбъект, Команда );
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомандуВыполнения()
	
	Для Каждого текКоманда Из Команды Цикл 	
		Если текКоманда.Действие = "БП_ВыполнитьЗадачу" Тогда 
			Возврат текКоманда;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ЗадачаИсполнителяНеЗавершенаНаСервере()
	
	Возврат ( Элементы.Найти( "БП_ВыполняемаяЗадача" ) <> Неопределено И
		 	  Не ЭтотОбъект["БП_ВыполняемаяЗадача"].Выполнена И
		 	  ЭтотОбъект["БП_ВыполняемаяЗадача"].ТочкаМаршрута.Порядок = 1 );
	
КонецФункции

&НаСервере
Процедура ЗапуститьБизнесПроцессСогласованияНаСервере()
	
	Обработки.СозданиеНСИ.ЗапуститьБизнесПроцессСогласования( Объект.Ссылка );
	
	БП_ПоддержкаБизнесПроцессовСервер.ОбработатьОткрытиеФормаОбъекта( ЭтотОбъект );
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиОбъектаБизнесПроцессаНаСервере()
	
	Если Обработки.СозданиеНСИ.ИспользоватьМеханизмБизнесПроцессов( Объект.Ссылка ) Тогда
		ЗапуститьБизнесПроцессСогласованияНаСервере();
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗавершитьЗадачуНаСервере( фпИмяКоманды )

	текНомер  = Сред( фпИмяКоманды, 12 );
	текСтатус = ЭтаФорма["БП_Статус" + текНомер];
	
	БП_ПоддержкаБизнесПроцессовСервер.ЗавершитьЗадачу( ЭтотОбъект.БП_ВыполняемаяЗадача, ЭтотОбъект.БП_ВыполняемаяЗадача.БизнесПроцесс, текСтатус );

	Обработки.СозданиеНСИ.УстановитьРеквизитыПоБизнесПроцессу( ЭтотОбъект.БП_ВыполняемаяЗадача, Объект.Ссылка );
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура УстановитьКомментарийЗадачиНаСервере( фпЗадача, фпКомментарий )
	
	Обработки.СозданиеНСИ.УстановитьРеквизитКомментарий( фпЗадача, фпКомментарий );
	
КонецПроцедуры

#КонецОбласти

