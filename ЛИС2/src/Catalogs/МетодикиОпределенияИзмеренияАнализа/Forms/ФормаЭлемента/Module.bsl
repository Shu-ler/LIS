
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВидимостьЭлементов()
	
	Если Константы.лис_УправлениеЛабораторией.Получить() = Истина Тогда
		Элементы.МетодАнализа.Видимость 	= Истина;
		Элементы.ОписаниеМетодики.Видимость = Истина;
		Элементы.ПоказателиФормулы.Видимость= Истина;
		Элементы.ГруппаСтраницы.Видимость	= Истина;		
	Иначе
		Элементы.МетодАнализа.Видимость 	= Ложь;
		Элементы.ОписаниеМетодики.Видимость = Ложь;
		Элементы.ПоказателиФормулы.Видимость= Ложь;
		Элементы.ГруппаСтраницы.Видимость	= Ложь;
	КонецЕсли;
	
		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияКонструктораФормул(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		СтрокаФормулы = Объект.Формулы.Добавить();
		СтрокаФормулы.Формула = Результат;
		//Объект.Формула = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидимостьЭлементов();
	
	Если ЗначениеЗаполнено(Объект.Показатель) Тогда
		Если Объект.Показатель = ПредопределенноеЗначение("Перечисление.ПоказателиМетодик.Количественный") Тогда
			Элементы.СтраницаДиапазоныИзмерений.Видимость = Истина;
		Иначе
			Элементы.СтраницаКачественныеПоказатели.Видимость = Истина;
		КонецЕсли;
	КонецЕсли; 
	
	Диапазоны.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Диапазоны.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ВвестиФормулу(Команда)
	
	ПараметрыФормулы = новый СписокЗначений;
	Для каждого ПоказательФормулы из Объект.ПоказателиФормулы Цикл
		ПараметрыФормулы.Добавить(ПоказательФормулы.Показатель, ПоказательФормулы.Описание);
	КонецЦикла;
	
	ПараметрыКонструктораФормул = Новый Структура;
//	ПараметрыКонструктораФормул.Вставить("Формула", Объект.Формула);
	ПараметрыКонструктораФормул.Вставить("ПараметрыФормулы", ПараметрыФормулы);
	
	ВыполнитьПослеЗакрытияКонструктораФормул = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияКонструктораФормул", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.МетодикиОпределенияИзмеренияАнализа.Форма.ФормаКонструктораФормул", ПараметрыКонструктораФормул, ЭтаФорма, , ВариантОткрытияОкна.ОтдельноеОкно, , ВыполнитьПослеЗакрытияКонструктораФормул, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДиапазоныИзмеренийФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Для каждого Строка Из Объект.Формулы Цикл
		ФормулаДляВыбора = Элемент.СписокВыбора.Добавить();
		ФормулаДляВыбора.Значение = Строка.Формула;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Показатель) Тогда
		Если Объект.Показатель = ПредопределенноеЗначение("Перечисление.ПоказателиМетодик.Количественный") Тогда
			Элементы.СтраницаДиапазоныИзмерений.Видимость = Истина;
			Элементы.СтраницаКачественныеПоказатели.Видимость = Ложь;
			Объект.КачественныеПоказатели.Очистить();
		Иначе
			Элементы.СтраницаДиапазоныИзмерений.Видимость = Ложь;
			Элементы.СтраницаКачественныеПоказатели.Видимость = Истина;
			Объект.ДиапазоныИзмерений.Очистить();
		КонецЕсли;
	Иначе
		Элементы.СтраницаДиапазоныИзмерений.Видимость = Ложь;
		Элементы.СтраницаКачественныеПоказатели.Видимость = Ложь;
		Объект.ДиапазоныИзмерений.Очистить();
		Объект.КачественныеПоказатели.Очистить();
	КонецЕсли; 		
	
КонецПроцедуры


#КонецОбласти
