#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ДобавитьЭлементФормулы(Элемент, ЭтоПараметр = Ложь)

	КоличествоЭлементов = СтруктураФормулы.Количество();
	Если КоличествоЭлементов = 0 Тогда
		ПредыдущийЭлемент = Неопределено;
	Иначе
		ПредыдущийЭлемент = ?(СтруктураФормулы[КоличествоЭлементов-1].ЭтоПараметр, "Параметр", СтруктураФормулы[КоличествоЭлементов-1].Элемент);
	КонецЕсли;
	
	// Цифра
	Если СтрНайти("0123456789", Элемент) > 0 Тогда

		Если ПредыдущийЭлемент = "Параметр" или
			(ПредыдущийЭлемент <> Неопределено и СтрНайти(")", ПредыдущийЭлемент) > 0) Тогда
			Возврат Ложь;
		КонецЕсли;

	// Оператор
	ИначеЕсли СтрНайти("+/*^", Элемент) > 0 Тогда 
		
		Если ПредыдущийЭлемент = Неопределено или 
			 СтрНайти("+-/*^(.,", ПредыдущийЭлемент) > 0 Тогда
			Возврат Ложь;
		КонецЕсли;

	// Оператор вычитание, отрицание
	ИначеЕсли СтрНайти("-", Элемент) > 0 Тогда  
		
		Если (ПредыдущийЭлемент <> Неопределено и СтрНайти("+-/*.,", ПредыдущийЭлемент) > 0) Тогда
			Возврат Ложь;
		КонецЕсли;

	// Скобка открывающая
	ИначеЕсли СтрНайти("(", Элемент) > 0 Тогда 
		
		Если ПредыдущийЭлемент = "Параметр" или
			(ПредыдущийЭлемент <> Неопределено и СтрНайти("0123456789).,", ПредыдущийЭлемент) > 0) Тогда
			Возврат Ложь;
		КонецЕсли;
		
	// Скобка закрывающая	
	ИначеЕсли СтрНайти(")", Элемент) > 0 Тогда 
		
		КоличествоСкобокОткрывающих = 0;
		КоличествоСкобокЗакрывающих = 0;
		Для каждого ЭлементФормулы из СтруктураФормулы Цикл
			Если СтрНайти("(", ЭлементФормулы.Элемент) > 0 Тогда
				КоличествоСкобокОткрывающих = КоличествоСкобокОткрывающих + 1;
			ИначеЕсли СтрНайти(")", ЭлементФормулы.Элемент) > 0 Тогда
				КоличествоСкобокЗакрывающих = КоличествоСкобокЗакрывающих + 1;
			КонецЕсли;
		КонецЦикла;
		
		Если ПредыдущийЭлемент = Неопределено или
			 КоличествоСкобокОткрывающих = КоличествоСкобокЗакрывающих или
			 СтрНайти("+-/*^(.,", ПредыдущийЭлемент) > 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		
	// Разделитель дробной части
	ИначеЕсли СтрНайти(".,", Элемент) > 0 Тогда 
		
		// !!! Добавить проверку повторения дробной части числа 
		Если ПредыдущийЭлемент = Неопределено или 
			 ПредыдущийЭлемент = "Параметр" или
             СтрНайти("+-/*^().,", ПредыдущийЭлемент) > 0 Тогда
			Возврат Ложь;
		КонецЕсли;
		
	// Параметр
	ИначеЕсли ЭтоПараметр Тогда 
		
		Если ПредыдущийЭлемент = "Параметр" или 
			(ПредыдущийЭлемент <> Неопределено и СтрНайти("0123456789).,", ПредыдущийЭлемент) > 0) Тогда
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	НС = СтруктураФормулы.Добавить(); 
	НС.Элемент = Элемент;
	НС.ЭтоПараметр = ЭтоПараметр;
	
	СформироватьПредставлениеФормулы();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура УдалитьПоследнийЭлементФормулы()

	Если СтруктураФормулы.Количество() > 0 Тогда
		
		СтруктураФормулы.Удалить(СтруктураФормулы.Количество()-1);
		
		СформироватьПредставлениеФормулы();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьФормулу()

	СтруктураФормулы.Очистить();

	СформироватьПредставлениеФормулы();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеФормулы()

	Формула = "";
	
	Для Счетчик = 0 по СтруктураФормулы.Количество() - 1 Цикл
		
		Элемент = СтруктураФормулы[Счетчик].Элемент;
		
		Если Счетчик = 0 Тогда
			ПредыдущийЭлемент = Неопределено;
		Иначе
			ПредыдущийЭлемент = ?(СтруктураФормулы[Счетчик-1].ЭтоПараметр, "Параметр", СтруктураФормулы[Счетчик-1].Элемент);
		КонецЕсли;
		
		Если СтрНайти("+/*", Элемент) > 0 или
			(СтрНайти("-", Элемент) > 0 и ПредыдущийЭлемент <> Неопределено и СтрНайти("^(", ПредыдущийЭлемент) = 0) Тогда
			
			Формула = Формула + " " + Элемент + " ";
		Иначе
			Формула = Формула + Элемент;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗавершенияРедактирования(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Закрыть(Формула);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СимволыОпераций = "+-*/^()";

	// Формируем таблицу параметров формулы
	СписокПараметровФормулы = Неопределено;
	Если Параметры.Свойство("ПараметрыФормулы", СписокПараметровФормулы) Тогда
		
		Для каждого Параметр из СписокПараметровФормулы Цикл
			
			СообщениеОбОшибке = "";
			
			Если СтрНайти(".,", Параметр.Значение) > 0 Тогда
				СообщениеОбОшибке = НСтр("ru = 'Параметр не может быть использован в формуле, т.к. является разделителем дробной части.'");
			ИначеЕсли СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Параметр.Значение) <> Неопределено Тогда
				СообщениеОбОшибке = НСтр("ru = 'Параметр не может быть использован в формуле, т.к. является числом.'");
			Иначе
				
				Для Счетчик = 1 по СтрДлина(СимволыОпераций) Цикл
					ТекущийСимвол = Сред(СимволыОпераций, Счетчик, 1);
					
					Если СтрНайти(Параметр.Значение, ТекущийСимвол) > 0 Тогда
						СообщениеОбОшибке = НСтр("ru = 'Параметр не может быть использован в формуле, т.к. содержит символы операций ""%1"".'");
						СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%1", СимволыОпераций); 
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			НС = ПараметрыФормулы.Добавить();	
			НС.Параметр = Параметр.Значение;
			НС.Описание = Параметр.Представление;
			НС.СообщениеОбОшибке = СообщениеОбОшибке;
			
		КонецЦикла;
	КонецЕсли;

	// Восстанавливаем структуру формулы
	Параметры.Свойство("Формула", Формула);
	
	ВременнаяСтрока = "";
	Для Счетчик = 1 по СтрДлина(Формула) Цикл
		ТекущийСимвол = Сред(Формула, Счетчик, 1);
		ТекущийСимволОперации = СтрНайти(СимволыОпераций, ТекущийСимвол) > 0;
		
		// Разбираем операдны формулы
		Если не ТекущийСимволОперации Тогда	
			 ВременнаяСтрока = ВременнаяСтрока + ТекущийСимвол;
		КонецЕсли;
		
		Если ТекущийСимволОперации или Счетчик = СтрДлина(Формула) Тогда
			
			ВременнаяСтрока = СокрЛП(ВременнаяСтрока);
			Если ВременнаяСтрока <> "" Тогда 
				
				Если СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ВременнаяСтрока) = Неопределено Тогда
					НС = СтруктураФормулы.Добавить(); 
					НС.Элемент = ВременнаяСтрока;
					НС.ЭтоПараметр = Истина;
				Иначе
					Для СчетчикВС = 1 по СтрДлина(ВременнаяСтрока) Цикл
						ТекущийСимволВС = Сред(ВременнаяСтрока, СчетчикВС, 1);
						Если ТекущийСимволВС = " " Тогда 
							Продолжить;
						КонецЕсли;
						Если ТекущийСимволВС = "," Тогда 
							ТекущийСимволВС = ".";
						КонецЕсли;
						НС = СтруктураФормулы.Добавить(); 
						НС.Элемент = ТекущийСимволВС;
						НС.ЭтоПараметр = Ложь;
					КонецЦикла;
				КонецЕсли;
				
				ВременнаяСтрока = "";	
			КонецЕсли;
		КонецЕсли;
		
		// Разбираем операторы формулы
		Если ТекущийСимволОперации Тогда					
			НС = СтруктураФормулы.Добавить(); 
			НС.Элемент = ТекущийСимвол;
			НС.ЭтоПараметр = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	СформироватьПредставлениеФормулы();
	
КонецПроцедуры


&НаКлиенте
Процедура Цифра0(Команда)
	
	ДобавитьЭлементФормулы("0");

КонецПроцедуры

&НаКлиенте
Процедура Цифра1(Команда)
	
	ДобавитьЭлементФормулы("1");

КонецПроцедуры

&НаКлиенте
Процедура Цифра2(Команда)
	
	ДобавитьЭлементФормулы("2");

КонецПроцедуры

&НаКлиенте
Процедура Цифра3(Команда)
	
	ДобавитьЭлементФормулы("3");

КонецПроцедуры

&НаКлиенте
Процедура Цифра4(Команда)
	
	ДобавитьЭлементФормулы("4");

КонецПроцедуры

&НаКлиенте
Процедура Цифра5(Команда)
	
	ДобавитьЭлементФормулы("5");

КонецПроцедуры

&НаКлиенте
Процедура Цифра6(Команда)
	
	ДобавитьЭлементФормулы("6");

КонецПроцедуры

&НаКлиенте
Процедура Цифра7(Команда)
	
	ДобавитьЭлементФормулы("7");

КонецПроцедуры

&НаКлиенте
Процедура Цифра8(Команда)
	
	ДобавитьЭлементФормулы("8");

КонецПроцедуры

&НаКлиенте
Процедура Цифра9(Команда)
	
	ДобавитьЭлементФормулы("9");

КонецПроцедуры


&НаКлиенте
Процедура Сложение(Команда)
	
	ДобавитьЭлементФормулы("+");	
	
КонецПроцедуры

&НаКлиенте
Процедура Вычитание(Команда)
	
	ДобавитьЭлементФормулы("-");
	
КонецПроцедуры

&НаКлиенте
Процедура Умножение(Команда)
	
	ДобавитьЭлементФормулы("*");

КонецПроцедуры

&НаКлиенте
Процедура Деление(Команда)
	
	ДобавитьЭлементФормулы("/");

КонецПроцедуры

&НаКлиенте
Процедура ВозведениеВСтепень(Команда)
	
	ДобавитьЭлементФормулы("^");

КонецПроцедуры

&НаКлиенте
Процедура СкобкаОткрывающая(Команда)
	
	ДобавитьЭлементФормулы("(");
	
КонецПроцедуры

&НаКлиенте
Процедура СкобкаЗакрывающая(Команда)
	
	ДобавитьЭлементФормулы(")");
	
КонецПроцедуры

&НаКлиенте
Процедура РазделительДробнойЧасти(Команда)
	
	ДобавитьЭлементФормулы(".");

КонецПроцедуры


&НаКлиенте
Процедура ОтменитьДействие(Команда)

	УдалитьПоследнийЭлементФормулы();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)

	ОчиститьФормулу();	
	
КонецПроцедуры


&НаКлиенте
Процедура ПараметрыФормулыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ПараметрыФормулы.ТекущиеДанные;
	
	Если ПустаяСтрока(ТекущиеДанные.СообщениеОбОшибке) Тогда
		ДобавитьЭлементФормулы(ТекущиеДанные.Параметр, Истина);
	Иначе	
		ПоказатьПредупреждение(, ТекущиеДанные.СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	КоличествоЭлементов = СтруктураФормулы.Количество();
	Если КоличествоЭлементов = 0 Тогда
		ПоследнийЭлемент = Неопределено;
	Иначе
		ПоследнийЭлемент = ?(СтруктураФормулы[КоличествоЭлементов-1].ЭтоПараметр, "Параметр", СтруктураФормулы[КоличествоЭлементов-1].Элемент);
	КонецЕсли;

	Если СтрНайти("+-/*^", ПоследнийЭлемент) > 0 Тогда
		ВопросЗавершенияРедактирования = Новый ОписаниеОповещения("ВопросЗавершенияРедактирования", ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'Формула оканчивается символом операции." + Символы.ПС + "Завершить редактирование?'");
		ПоказатьВопрос(ВопросЗавершенияРедактирования, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(".,", ПоследнийЭлемент) > 0 Тогда
		ВопросЗавершенияРедактирования = Новый ОписаниеОповещения("ВопросЗавершенияРедактирования", ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'Формула оканчивается разделителем дробной части." + Символы.ПС + "Завершить редактирование?'");
		ПоказатьВопрос(ВопросЗавершенияРедактирования, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	КоличествоСкобокОткрывающих = 0;
	КоличествоСкобокЗакрывающих = 0;
	Для каждого ЭлементФормулы из СтруктураФормулы Цикл
		Если СтрНайти("(", ЭлементФормулы.Элемент) > 0 Тогда
			КоличествоСкобокОткрывающих = КоличествоСкобокОткрывающих + 1;
		ИначеЕсли СтрНайти(")", ЭлементФормулы.Элемент) > 0 Тогда
			КоличествоСкобокЗакрывающих = КоличествоСкобокЗакрывающих + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если КоличествоСкобокОткрывающих <> КоличествоСкобокЗакрывающих Тогда
		ВопросЗавершенияРедактирования = Новый ОписаниеОповещения("ВопросЗавершенияРедактирования", ЭтотОбъект);
		ТекстСообщения = НСтр("ru = 'Количество открывающих скобок не равно количеству закрывающих скобок." + Символы.ПС + "Завершить редактирование?'");
		ПоказатьВопрос(ВопросЗавершенияРедактирования, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;

	Закрыть(Формула); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРедактирование(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти
