
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОсновнойДоговор(Команда)
	
	ТекущиеДанные = Элементы.ДоговорыКонтрагента.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоговорСсылка = ТекущиеДанные.Ссылка;
	КонтрагентСсылка = Объект.Ссылка;	
	
	КомандаОсновнойДоговорНаСервере(КонтрагентСсылка, ДоговорСсылка);
	
	Элементы.ДоговорыКонтрагента.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДоговорыКонтрагента, "Владелец", Объект.Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДоговорыКонтрагента, "Владелец", Неопределено);
	КонецЕсли;
	
	ЗначениеЮридическоеЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
	ТипКонтрагентаПолигон = Перечисления.ТипыКонтрагента.СобственникОРО;
	ТипКонтрагентаЛаборатория = Перечисления.ТипыКонтрагента.УчебныйЦентрЛаборатория;
	
	УправлениеВидимостью(ЭтаФорма);
	
	//Элементы.GUIDВнешнейСистемы.ТолькоПросмотр = Не РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
		УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
		УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.КонтактнаяИнформация
		УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)

	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.НаименованиеПолное) = Истина Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

// 1С-КСУ Казанцев И.В. 31.08.17 9:50 Поля ЮрАдрес, ФактАдрес удаляются из интерфейса т.к. дублируют информацию т.ч. КонтактнаяИнформация.
//&НаКлиенте
//Процедура ЮрАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	Если Не ПустаяСтрока(Объект.ЮрАдрес) Тогда
//		
//		ПараметрыОповещения = Новый Структура("ИмяРеквизитаАдреса", "ЮрАдрес");
//		
//		ПоказатьВопрос(
//		 	Новый ОписаниеОповещения("ВыполнитьОткрытиеФормыВводаАдреса", ЭтотОбъект, ПараметрыОповещения),
//			"Заполнение полей в окне ввода нового адреса приведет к удалению текущего юридического адреса. Продолжить?",
//			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Предупреждение");
//		
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ФактАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	Если Не ПустаяСтрока(Объект.ФактАдрес) Тогда
//		
//		ПараметрыОповещения = Новый Структура("ИмяРеквизитаАдреса", "ФактАдрес");
//		
//		ПоказатьВопрос(
//		 	Новый ОписаниеОповещения("ВыполнитьОткрытиеФормыВводаАдреса", ЭтотОбъект, ПараметрыОповещения),
//			"Заполнение полей в окне ввода нового адреса приведет к удалению текущего фактического адреса. Продолжить?",
//			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Предупреждение");
//		
//	КонецЕсли;
//		
//КонецПроцедуры
// 1С-КСУ Казанцев И.В. 31.08.17 9:50 Поля ЮрАдрес, ФактАдрес удаляются из интерфейса т.к. дублируют информацию т.ч. КонтактнаяИнформация. Конец.

&НаКлиенте
Процедура ОсуществляетПлатуЗаНВПриИзменении(Элемент)
	
	

	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоговоровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
				
		ПоказатьВопрос(
		 	Новый ОписаниеОповещения("ВыполнитьЗаписьИСоздатьДоговор", ЭтотОбъект),
			"Создать договор можно только после сохранения контрагента. Записать контрагента?",
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
			
	Иначе
	
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
		
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", СтруктураПараметров, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКонтрагентаПриИзменении(Элемент)
	
	Если Объект.ТипКонтрагента = ТипКонтрагентаПолигон Тогда
		
		ПоказатьПредупреждение(, 
			"Теперь платежи за отходы переданные этому контрагенту, будут начисляться по ОКТМО контрагента.");
		
	КонецЕсли;
		
	Если Объект.ТипКонтрагента <> ПредопределенноеЗначение( "Перечисление.ТипыКонтрагента.ФедеральныйОрганИсполнительнойВласти" ) Тогда 
		Объект.ВидПроверяющейОрганизации = Неопределено;
	КонецЕсли;
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПроверяющейОрганизацииПриИзменении(Элемент)
	
	УправлениеВидимостью(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостью(Форма)
	
	ЭлементыФормы = Форма.Элементы;
	
	ЮрФизЛицо = Форма.Объект.ЮрФизЛицо;
	Если ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		
		ПризнакЮридическогоЛица = ЮрФизЛицо = Форма.ЗначениеЮридическоеЛицо;
		
		ЭлементыФормы.КПП.Видимость 	= ПризнакЮридическогоЛица;
		ЭлементыФормы.ИНН.Маска = ?(ПризнакЮридическогоЛица = Истина, "9999999999", "999999999999");

	КонецЕсли;
	
	ЭлементыФормы.КодОрганаРПН.Видимость = ?(Форма.Объект.ТипКонтрагента = ПредопределенноеЗначение("Перечисление.ТипыКонтрагента.ФедеральныйОрганИсполнительнойВласти") И Форма.Объект.ВидПроверяющейОрганизации = ПредопределенноеЗначение("Перечисление.ВидПроверяющейОрганизации.Росприроднадзор"), Истина, Ложь);
	
	ЯвляетсяПолигоном 		= (Форма.Объект.ТипКонтрагента = Форма.ТипКонтрагентаПолигон);
	ЯвляетсяЛабораторией 	= (Форма.Объект.ТипКонтрагента = Форма.ТипКонтрагентаЛаборатория);
	ОсуществляетПлатуЗаНВ 	= Форма.Объект.ОсуществляетПлатуЗаНВ;
	
	ЭлементыФормы.ГруппаЛаборатория.Видимость 		= ЯвляетсяЛабораторией;
	ЭлементыФормы.СрокиПлатыКонтрагентом.Видимость 	= ОсуществляетПлатуЗаНВ;
	
	ЭлементыФормы.ВидПроверяющейОрганизации.Видимость =	( Форма.Объект.ТипКонтрагента = ПредопределенноеЗначение( "Перечисление.ТипыКонтрагента.ФедеральныйОрганИсполнительнойВласти" ) );
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОткрытиеФормыВводаАдреса(РезультатДиалога, ДополнительныеПараметры) Экспорт
	
	Если РезультатДиалога = КодВозвратаДиалога.Да Тогда
		
		ОткрытьФорму(
			"ОбщаяФорма.ВводАдреса", , ЭтаФорма, , , , 
			Новый ОписаниеОповещения("ПослеЗавершенияВводаАдреса", ЭтотОбъект, ДополнительныеПараметры), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияВводаАдреса(РезультатДиалога, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатДиалога) И РезультатДиалога <> КодВозвратаДиалога.Отмена Тогда
		
		Объект[ДополнительныеПараметры.ИмяРеквизитаАдреса] = РезультатДиалога;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаписьИСоздатьДоговор(РезультатДиалога, ДополнительныеПараметры) Экспорт
	
	Если РезультатДиалога = КодВозвратаДиалога.Да Тогда
		
		Если Записать() Тогда
		
			ПараметрыДоговора = Новый Структура("ЗначенияЗаполнения", Новый Структура("Владелец", Объект.Ссылка));
			
			ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыДоговора, ЭтаФорма); 
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДоговорыКонтрагента, "Владелец", Объект.Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаОсновнойДоговорНаСервере(КонтрагентСсылка, ДоговорСсылка)

	Если Не ЗначениеЗаполнено(КонтрагентСсылка) Или Не ЗначениеЗаполнено(ДоговорСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	Запрос.УстановитьПараметр("ДоговорСсылка", ДоговорСсылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
		|	ДоговорыКонтрагентов.ОсновнойДоговор КАК ОсновнойДоговор
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &ДоговорСсылка";
		
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();	
	Если ВыборкаЗапроса.Следующий() И ВыборкаЗапроса.ОсновнойДоговор Тогда
		
		ДоговорОбъект = ДоговорСсылка.ПолучитьОбъект(); 
		ДоговорОбъект.ОсновнойДоговор = Ложь;
		ДоговорОбъект.Записать();
		
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
		|	ДоговорыКонтрагентов.ОсновнойДоговор КАК ОсновнойДоговор
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &КонтрагентСсылка
		|	И ДоговорыКонтрагентов.ОсновнойДоговор";
		
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();	
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ДоговорОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект(); 
		ДоговорОбъект.ОсновнойДоговор = Ложь;
		ДоговорОбъект.Записать();
		
	КонецЦикла;
	
	ДоговорОбъект = ДоговорСсылка.ПолучитьОбъект(); 
	ДоговорОбъект.ОсновнойДоговор = Истина;
	ДоговорОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Поддержка контактной информации.

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

